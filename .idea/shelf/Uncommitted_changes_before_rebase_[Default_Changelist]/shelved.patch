Index: app/src/main/java/com/soufianekre/redpass/ui/about/AboutActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.about\r\n\r\n\r\n\r\nimport android.content.Context\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport androidx.annotation.NonNull\r\nimport androidx.annotation.Nullable\r\nimport com.danielstone.materialaboutlibrary.ConvenienceBuilder\r\nimport com.danielstone.materialaboutlibrary.MaterialAboutActivity\r\nimport com.danielstone.materialaboutlibrary.items.MaterialAboutActionItem\r\nimport com.danielstone.materialaboutlibrary.items.MaterialAboutTitleItem\r\nimport com.danielstone.materialaboutlibrary.model.MaterialAboutCard\r\nimport com.danielstone.materialaboutlibrary.model.MaterialAboutList\r\nimport com.google.android.material.card.MaterialCardView\r\nimport com.mikepenz.aboutlibraries.LibsBuilder\r\nimport com.mikepenz.community_material_typeface_library.CommunityMaterial\r\nimport com.mikepenz.iconics.IconicsDrawable\r\nimport com.soufianekre.redpass.R\r\n\r\n\r\nclass AboutActivity : MaterialAboutActivity() {\r\n\r\n\r\n\r\n    override fun getMaterialAboutList(context: Context): MaterialAboutList {\r\n        return MaterialAboutList.Builder()\r\n            .addCard(setupAppInfoCard())\r\n            .addCard(setupDevInfoCard())\r\n            .build()\r\n    }\r\n\r\n    override fun getActivityTitle(): CharSequence? {\r\n        return  getString(R.string.title_about)\r\n    }\r\n\r\n    fun setupAppInfoCard(): MaterialAboutCard {\r\n        val devInfo: MaterialAboutCard.Builder = MaterialAboutCard.Builder()\r\n            .title(\"App\")\r\n        devInfo.addItem(\r\n            MaterialAboutTitleItem.Builder()\r\n                .text(\"Clippy Android\")\r\n                .desc(\"Â© 2020 Soufiane Kremcht\")\r\n                .icon(R.mipmap.ic_launcher)\r\n                .build()\r\n        )\r\n        devInfo.addItem(\r\n            ConvenienceBuilder.createVersionActionItem(\r\n                this,\r\n                IconicsDrawable(this)\r\n                    .icon(CommunityMaterial.Icon.cmd_information_outline)\r\n                    .sizeDp(18),\r\n                \"Version\",\r\n                false\r\n            )\r\n        )\r\n        devInfo.addItem(\r\n            MaterialAboutActionItem.Builder()\r\n                .text(\"Open Source Licenses\")\r\n                .icon(\r\n                    IconicsDrawable(this)\r\n                        .icon(CommunityMaterial.Icon.cmd_book)\r\n                        .sizeDp(18)\r\n                )\r\n                .setOnClickAction {\r\n                    LibsBuilder()\r\n                        .withAboutAppName(getString(R.string.app_name))\r\n                        .withActivityTitle(\"Licenses\")\r\n                        .start(this@AboutActivity)\r\n                }\r\n                .build()\r\n        )\r\n        return devInfo.build()\r\n    }\r\n\r\n    private fun setupDevInfoCard(): MaterialAboutCard {\r\n        val authorCardBuilder: MaterialAboutCard.Builder = MaterialAboutCard.Builder().title(\"Author\")\r\n        authorCardBuilder.addItem(\r\n            MaterialAboutActionItem.Builder()\r\n                .text(\"Soufiane Kre\")\r\n                .subText(\"Morocco\")\r\n                .icon(\r\n                    IconicsDrawable(this)\r\n                        .icon(CommunityMaterial.Icon.cmd_account)\r\n                        .sizeDp(18)\r\n                )\r\n                .build()\r\n        )\r\n        authorCardBuilder.addItem(\r\n            MaterialAboutActionItem.Builder()\r\n                .text(\"visit my GitHub\")\r\n                .icon(\r\n                    IconicsDrawable(this)\r\n                        .icon(CommunityMaterial.Icon.cmd_github_circle)\r\n                        .sizeDp(18)\r\n                )\r\n                .setOnClickAction(\r\n                    ConvenienceBuilder.createWebsiteOnClickAction(\r\n                        this,\r\n                        Uri.parse(\"https://github.com/SoufianeKre\")\r\n                    )\r\n                )\r\n                .build()\r\n        )\r\n        return authorCardBuilder.build()\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/about/AboutActivity.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/about/AboutActivity.kt	(date 1605283915042)
@@ -1,4 +1,4 @@
-package com.soufianekre.redpass.ui.about
+package com.soufianekre.redpass.ui.settings.about
 
 
 
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
===================================================================
--- app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsMvp.kt
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsMvp.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsMvp.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
@@ -1,12 +0,0 @@
-package com.soufianekre.redpass.ui.settings
-
-import com.soufianekre.redpass.ui.base.mvp.BaseMvp
-
-interface SettingsMvp{
-    interface View : BaseMvp.View{
-
-    }
-    interface Presenter : BaseMvp.Presenter<View>{
-
-    }
-}
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
===================================================================
--- app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsPresenter.kt
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsPresenter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsPresenter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
@@ -1,2 +0,0 @@
-package com.soufianekre.redpass.ui.settings
-
Index: app/src/main/res/values/style_drawer.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n\r\n    <style name=\"style_drawer_item_layout\">\r\n        <item name=\"android:background\">?selectableItemBackground</item>\r\n    </style>\r\n    <style name=\"style_drawer_img\">\r\n        <item name=\"android:padding\">@dimen/spacing_small</item>\r\n        <item name=\"android:layout_margin\">@dimen/spacing_normal</item>\r\n\r\n    </style>\r\n    <style name=\"style_drawer_field\">\r\n        <item name=\"android:padding\">@dimen/spacing_normal</item>\r\n        <item name=\"android:layout_margin\">@dimen/spacing_small</item>\r\n        <item name=\"android:textSize\">@dimen/font_normal</item>\r\n    </style>\r\n\r\n    <style name=\"style_drawer_text\">\r\n        <item name=\"android:padding\">@dimen/spacing_small</item>\r\n\r\n        <item name=\"android:textSize\">@dimen/font_normal</item>\r\n    </style>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/style_drawer.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/values/style_drawer.xml	(date 1606162929422)
@@ -3,21 +3,23 @@
 
     <style name="style_drawer_item_layout">
         <item name="android:background">?selectableItemBackground</item>
+        <item name="android:clickable">true</item>
+        <item name="android:focusable">true</item>
     </style>
     <style name="style_drawer_img">
         <item name="android:padding">@dimen/spacing_small</item>
-        <item name="android:layout_margin">@dimen/spacing_normal</item>
+        <item name="android:layout_margin">@dimen/spacing_small</item>
 
     </style>
     <style name="style_drawer_field">
-        <item name="android:padding">@dimen/spacing_normal</item>
+        <item name="android:padding">@dimen/spacing_small</item>
         <item name="android:layout_margin">@dimen/spacing_small</item>
         <item name="android:textSize">@dimen/font_normal</item>
     </style>
 
     <style name="style_drawer_text">
         <item name="android:padding">@dimen/spacing_small</item>
-
         <item name="android:textSize">@dimen/font_normal</item>
+        <item name="android:textStyle">bold</item>
     </style>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.MaterialComponents.DayNight.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n        <item name=\"colorSecondary\">@color/colorAccent</item>\r\n\r\n        <!--        Material Component Attrs-->\r\n        <item name=\"colorOnPrimary\">@color/white</item>\r\n        <item name=\"colorOnSecondary\">@color/white</item>\r\n        <item name=\"colorOnSurface\">@color/accent_black</item>\r\n        <item name=\"colorOnPrimarySurface\">@color/white</item>\r\n\r\n        <!--<item name=\"colorPrimaryVariant\">@color/my_app_primary_variant_color</item>\r\n        <item name=\"colorSecondaryVariant\">@color/my_app_secondary_variant_color</item>\r\n        <item name=\"colorSurface\">@color/my_app_surface_color</item>\r\n        <item name=\"colorOnBackground\">@color/my_app_color_on_background</item>\r\n        <item name=\"colorOnError\">@color/my_app_color_on_error</item>\r\n        <item name=\"colorOnSurface\">@color/my_app_color_on_surface</item>-->\r\n\r\n\r\n\r\n        <item name=\"scrimBackground\">@color/mtrl_scrim_color</item>\r\n        <item name=\"windowActionModeOverlay\">true</item>\r\n        <item name=\"android:actionModeBackground\">@color/holo_dark_action_mode</item>\r\n        <item name=\"actionModeBackground\">@color/holo_dark_action_mode</item>\r\n        <item name=\"colorControlNormal\">@color/white</item>\r\n        <item name=\"preferenceTheme\">@style/PreferenceThemeOverlay.v14.Material</item>\r\n\r\n\r\n    </style>\r\n    <style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowNoTitle\">true</item>\r\n        <item name=\"windowActionBar\">false</item>\r\n\r\n    </style>\r\n    <style name=\"AppTheme.ThemeOverLay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\"/>\r\n    <style name=\"AppTheme.PopUpOverLay\" parent=\"ThemeOverlay.AppCompat.Light\"/>\r\n\r\n\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/values/styles.xml	(date 1606152378128)
@@ -6,8 +6,8 @@
 
         <item name="colorPrimary">@color/colorPrimary</item>
         <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-        <item name="colorAccent">@color/colorAccent</item>
-        <item name="colorSecondary">@color/colorAccent</item>
+        <item name="colorAccent">@color/colorPrimaryDark</item>
+        <item name="colorSecondary">@color/colorPrimaryDark</item>
 
         <!--        Material Component Attrs-->
         <item name="colorOnPrimary">@color/white</item>
@@ -21,9 +21,7 @@
         <item name="colorOnBackground">@color/my_app_color_on_background</item>
         <item name="colorOnError">@color/my_app_color_on_error</item>
         <item name="colorOnSurface">@color/my_app_color_on_surface</item>-->
-
-
-
+        
         <item name="scrimBackground">@color/mtrl_scrim_color</item>
         <item name="windowActionModeOverlay">true</item>
         <item name="android:actionModeBackground">@color/holo_dark_action_mode</item>
@@ -38,8 +36,21 @@
         <item name="windowActionBar">false</item>
 
     </style>
-    <style name="AppTheme.ThemeOverLay" parent="ThemeOverlay.AppCompat.Dark.ActionBar"/>
-    <style name="AppTheme.PopUpOverLay" parent="ThemeOverlay.AppCompat.Light"/>
+    <style name="AppTheme.ThemeOverLay" parent="ThemeOverlay.MaterialComponents.Dark.ActionBar"/>
+    <style name="AppTheme.PopUpOverLay" parent="ThemeOverlay.MaterialComponents.Dark"/>
+
+    <style name="Widget.LabelChip" parent="Widget.MaterialComponents.Chip.Action">
+        <!--        <item name="chipBackgroundColor">@color/chip_bg</item>-->
+        <!--        <item name="chipIcon">@drawable/asld_chip_icon</item>-->
+        <item name="chipIconVisible">true</item>
+        <item name="chipStrokeColor">@color/chip_stroke</item>
+        <item name="chipCornerRadius">@dimen/chip_corner_radius</item>
 
+        <item name="textStartPadding">0dp</item>
+        <item name="chipStrokeWidth">1dp</item>
+        <item name="chipBackgroundColor">@android:color/transparent</item>
+    </style>
 
+
+    <dimen name="chip_corner_radius">3dp</dimen>
 </resources>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">RedPass</string>\r\n    <string name=\"aes_utils_decrypt_error\">Decryption Error</string>\r\n    <string name=\"navigation_drawer_open\">Open</string>\r\n    <string name=\"navigation_drawer_close\">Close</string>\r\n    <string name=\"search_hint\">Search For Password</string>\r\n    <string name=\"title_about\">About</string>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/values/strings.xml	(date 1605285315850)
@@ -5,4 +5,9 @@
     <string name="navigation_drawer_close">Close</string>
     <string name="search_hint">Search For Password</string>
     <string name="title_about">About</string>
+
+    <string name="finger_print_instructions">Place your fingertip on the Home button to verify your identity
+</string>
+    <string name="edit_label">Edit Label</string>
+    <string name="now">Now</string>
 </resources>
Index: app/src/main/res/drawable/ic_list_dark.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_list_dark.xml	(date 1605286035681)
+++ app/src/main/res/drawable/ic_list_dark.xml	(date 1605286035681)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#3C3F41"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M4,10.5c-0.83,0 -1.5,0.67 -1.5,1.5s0.67,1.5 1.5,1.5 1.5,-0.67 1.5,-1.5 -0.67,-1.5 -1.5,-1.5zM4,4.5c-0.83,0 -1.5,0.67 -1.5,1.5S3.17,7.5 4,7.5 5.5,6.83 5.5,6 4.83,4.5 4,4.5zM4,16.5c-0.83,0 -1.5,0.68 -1.5,1.5s0.68,1.5 1.5,1.5 1.5,-0.68 1.5,-1.5 -0.67,-1.5 -1.5,-1.5zM7,19h14v-2L7,17v2zM7,13h14v-2L7,11v2zM7,5v2h14L21,5L7,5z"/>
+</vector>
Index: app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.passwords\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.*\r\nimport android.widget.LinearLayout\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager.VERTICAL\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.data.db.models.PasswordItem\r\nimport com.soufianekre.redpass.helpers.AppConst.FILTER_BY_LABEL\r\nimport com.soufianekre.redpass.helpers.AppConst.PASSWORD_TO_EDIT\r\nimport com.soufianekre.redpass.helpers.ColorsHelper\r\nimport com.soufianekre.redpass.ui.base.BaseFragment\r\nimport com.soufianekre.redpass.ui.main.MainActivity\r\nimport com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity\r\n\r\n\r\nclass PasswordListFragment :BaseFragment(),PasswordListMvp.View{\r\n\r\n\r\n\r\n    @BindView(R.id.passwords_empty_layout)\r\n    lateinit var emptyLayout: LinearLayout\r\n    @BindView(R.id.password_list_recycler_view)\r\n    lateinit var passwordListRecyclerView :RecyclerView\r\n    private lateinit var passwordAdapter : PasswordListAdapter\r\n\r\n    private lateinit var actionModeCallBack: CustomActionModeCallBack\r\n    private  var actionMode:ActionMode? = null\r\n\r\n    private var chosenLabel : Label? = null\r\n\r\n\r\n    private lateinit var mPresenter: PasswordListPresenter<PasswordListMvp.View>\r\n    companion object{\r\n\r\n\r\n        fun newInstance(label: Label?): PasswordListFragment {\r\n            val args = Bundle()\r\n            args.putSerializable(FILTER_BY_LABEL,label)\r\n            val fragment = PasswordListFragment()\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n    }\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        checkArgs()\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        var view = inflater.inflate(R.layout.fragment_password_list,container,false)\r\n        mPresenter = PasswordListPresenter()\r\n        ButterKnife.bind(this,view)\r\n        mPresenter.onAttach(this)\r\n        return view\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        actionModeCallBack = CustomActionModeCallBack()\r\n        passwordListRecyclerView.setHasFixedSize(true)\r\n        passwordListRecyclerView.layoutManager = LinearLayoutManager(requireActivity(),VERTICAL,false)\r\n        passwordListRecyclerView.itemAnimator = DefaultItemAnimator()\r\n        passwordAdapter = PasswordListAdapter(requireActivity(),ArrayList(),mPresenter)\r\n        passwordListRecyclerView.adapter = passwordAdapter\r\n\r\n        if (getMainActivity()!!.getSearchView() != null)\r\n            mPresenter.getSearchResults(getMainActivity()!!.getSearchView()!!)\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        mPresenter.getPasswords(\"\",chosenLabel)\r\n    }\r\n\r\n    \r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        mPresenter.onDetach()\r\n    }\r\n\r\n\r\n    override fun notifyAdapter(passwordList: List<PasswordItem>) {\r\n        passwordAdapter.addAll(passwordList)\r\n        checkEmptyView()\r\n    }\r\n\r\n    // layout\r\n    override fun openPasswordEditorActivity(passwordItem :PasswordItem) {\r\n        val intent : Intent = Intent(activity,PasswordEditorActivity::class.java)\r\n        intent.putExtra(PASSWORD_TO_EDIT,passwordItem)\r\n        startActivity(intent)\r\n    }\r\n\r\n\r\n    override fun onItemDeleted(password:PasswordItem) {\r\n\r\n    }\r\n\r\n\r\n    override fun enableActionMode(position:Int){\r\n        if (actionMode == null){\r\n            actionMode = requireActivity().startActionMode(actionModeCallBack)\r\n        }\r\n        toggleItemSelection(position)\r\n    }\r\n\r\n    override fun toggleItemSelection(position:Int){\r\n        passwordAdapter.toggleSelection(position)\r\n        if(passwordAdapter.getSelectedItemCount()>0){\r\n            actionMode?.title = passwordAdapter.getSelectedItemCount().toString()\r\n            actionMode?.invalidate()\r\n        }else{\r\n            actionMode?.finish()\r\n            actionMode = null\r\n        }\r\n    }\r\n\r\n    // Action Mode\r\n\r\n    override fun getActionMode(): ActionMode? {\r\n        return actionMode\r\n    }\r\n\r\n\r\n\r\n    override fun setToolbarTitle(label: Label?) {\r\n        if (label != null ){\r\n            getMainActivity()?.getToolbar()!!.title = \"Label : \" + label.name\r\n        }else{\r\n            getMainActivity()?.getToolbar()!!.title = \"Label : All \"\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    private fun checkEmptyView() {\r\n        if (passwordAdapter.itemCount >0){\r\n            passwordListRecyclerView.visibility = View.VISIBLE\r\n            emptyLayout.visibility = View.GONE\r\n        }else{\r\n            passwordListRecyclerView.visibility = View.GONE\r\n            emptyLayout.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    private fun getMainActivity() : MainActivity?{\r\n        return activity as MainActivity\r\n    }\r\n\r\n\r\n    private fun checkArgs() {\r\n        chosenLabel = arguments?.getSerializable(FILTER_BY_LABEL) as? Label\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    inner class CustomActionModeCallBack : ActionMode.Callback {\r\n        override fun onCreateActionMode(\r\n            mode: ActionMode?,\r\n            menu: Menu?\r\n        ): Boolean {\r\n            mode!!.menuInflater.inflate(R.menu.menu_action,menu)\r\n            passwordAdapter.selection_mode =true\r\n            changeStatusBarColor(ColorsHelper.getColor(getMainActivity()!!,R.color.holo_dark_action_mode))\r\n            getMainActivity()?.getFab()!!.hide()\r\n            passwordAdapter.notifyDataSetChanged()\r\n            return true\r\n\r\n        }\r\n\r\n        override fun onPrepareActionMode(\r\n            mode: ActionMode?,\r\n            menu: Menu?\r\n        ): Boolean {\r\n            return false\r\n        }\r\n\r\n        override fun onActionItemClicked(mode: ActionMode?, item: MenuItem?): Boolean {\r\n            when(item!!.itemId){\r\n                R.id.menu_action_select_all ->{\r\n                    // select all\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n\r\n\r\n        override fun onDestroyActionMode(mode:ActionMode?) {\r\n            passwordAdapter.clearSelection()\r\n            mode!!.finish()\r\n            passwordAdapter.selection_mode = false\r\n            actionMode = null\r\n            passwordListRecyclerView.post {\r\n                passwordAdapter.resetAnimationIndex()\r\n                // mAdapter.notifyDataSetChanged();\r\n            }\r\n            passwordAdapter.notifyDataSetChanged()\r\n            changeStatusBarColor(ColorsHelper.getColor(getMainActivity()!!,R.color.colorPrimary))\r\n            getMainActivity()?.getFab()!!.show()\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private fun changeStatusBarColor(color:Int) {\r\n        ColorsHelper.changeStatusBarColor(requireActivity(),color)\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListFragment.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListFragment.kt	(date 1605281429976)
@@ -125,17 +125,16 @@
 
     override fun toggleItemSelection(position:Int){
         passwordAdapter.toggleSelection(position)
-        if(passwordAdapter.getSelectedItemCount()>0){
-            actionMode?.title = passwordAdapter.getSelectedItemCount().toString()
-            actionMode?.invalidate()
-        }else{
+        val count = passwordAdapter.getSelectedItemCount();
+        if(count == 0){
             actionMode?.finish()
-            actionMode = null
+        }else{
+            actionMode?.title = count.toString()
+            actionMode?.invalidate()
         }
     }
 
     // Action Mode
-
     override fun getActionMode(): ActionMode? {
         return actionMode
     }
Index: app/src/main/res/drawable/ic_phone.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_phone.xml	(date 1606150941306)
+++ app/src/main/res/drawable/ic_phone.xml	(date 1606150941306)
@@ -0,0 +1,15 @@
+<vector android:height="24dp" android:viewportHeight="522.752"
+    android:viewportWidth="522.753" android:width="24.000046dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M151.891,58.183c0,-13.072 -10.595,-23.677 -23.677,-23.677h-80.87C21.2,34.506 0,53.937 0,77.901c0,23.973 21.2,43.404 47.344,43.404h80.87c13.072,0 23.677,-10.595 23.677,-23.677V58.183z"/>
+    <path android:fillColor="#FF000000" android:pathData="M337.317,58.183c0,-13.072 -10.596,-23.677 -23.677,-23.677H209.104c-13.072,0 -23.677,10.595 -23.677,23.677v39.455c0,13.072 10.595,23.677 23.677,23.677H313.65c13.071,0 23.677,-10.595 23.677,-23.677V58.183H337.317z"/>
+    <path android:fillColor="#FF000000" android:pathData="M475.409,34.516h-80.87c-13.071,0 -23.677,10.595 -23.677,23.677v39.455c0,13.072 10.596,23.677 23.677,23.677h80.87c26.145,0 47.344,-19.431 47.344,-43.404S501.553,34.516 475.409,34.516z"/>
+    <path android:fillColor="#FF000000" android:pathData="M151.891,180.497c0,-13.072 -10.595,-23.677 -23.677,-23.677h-80.87C21.2,156.82 0,176.251 0,200.215c0,23.973 21.2,43.395 47.344,43.395h80.87c13.072,0 23.677,-10.595 23.677,-23.677V180.497z"/>
+    <path android:fillColor="#FF000000" android:pathData="M337.317,180.497c0,-13.072 -10.596,-23.677 -23.677,-23.677H209.104c-13.072,0 -23.677,10.595 -23.677,23.677v39.445c0,13.072 10.595,23.677 23.677,23.677H313.65c13.071,0 23.677,-10.596 23.677,-23.677v-39.445H337.317z"/>
+    <path android:fillColor="#FF000000" android:pathData="M475.409,156.83h-80.87c-13.071,0 -23.677,10.595 -23.677,23.677v39.445c0,13.072 10.596,23.677 23.677,23.677h80.87c26.145,0 47.344,-19.421 47.344,-43.395S501.553,156.83 475.409,156.83z"/>
+    <path android:fillColor="#FF000000" android:pathData="M151.891,302.801c0,-13.072 -10.595,-23.677 -23.677,-23.677h-80.87C21.2,279.125 0,298.545 0,322.51c0,23.973 21.2,43.404 47.344,43.404h80.87c13.072,0 23.677,-10.596 23.677,-23.678V302.801z"/>
+    <path android:fillColor="#FF000000" android:pathData="M337.317,302.801c0,-13.072 -10.596,-23.677 -23.677,-23.677H209.104c-13.072,0 -23.677,10.595 -23.677,23.677v39.445c0,13.072 10.595,23.678 23.677,23.678H313.65c13.071,0 23.677,-10.596 23.677,-23.678v-39.445H337.317z"/>
+    <path android:fillColor="#FF000000" android:pathData="M475.409,279.134h-80.87c-13.071,0 -23.677,10.595 -23.677,23.677v39.445c0,13.072 10.596,23.676 23.677,23.676h80.87c26.145,0 47.344,-19.43 47.344,-43.404C522.753,298.555 501.553,279.134 475.409,279.134z"/>
+    <path android:fillColor="#FF000000" android:pathData="M128.214,401.438h-80.87C21.2,401.438 0,420.87 0,444.833c0,23.975 21.2,43.404 47.344,43.404h80.87c13.072,0 23.677,-10.604 23.677,-23.676v-39.455C151.891,412.034 141.286,401.438 128.214,401.438z"/>
+    <path android:fillColor="#FF000000" android:pathData="M313.65,401.438H209.104c-13.072,0 -23.677,10.596 -23.677,23.678v39.455c0,13.062 10.595,23.676 23.677,23.676H313.65c13.071,0 23.677,-10.605 23.677,-23.676v-39.455C337.317,412.034 326.722,401.438 313.65,401.438z"/>
+    <path android:fillColor="#FF000000" android:pathData="M475.409,401.438h-80.87c-13.071,0 -23.677,10.596 -23.677,23.678v39.455c0,13.062 10.596,23.676 23.677,23.676h80.87c26.145,0 47.344,-19.432 47.344,-43.404S501.553,401.438 475.409,401.438z"/>
+</vector>
Index: app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.passwords\r\n\r\n\r\nimport android.widget.SearchView\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.data.db.models.PasswordItem\r\nimport com.soufianekre.redpass.helpers.RxSearchObservable\r\nimport com.soufianekre.redpass.ui.base.mvp.BasePresenter\r\nimport io.reactivex.android.schedulers.AndroidSchedulers\r\nimport io.reactivex.schedulers.Schedulers\r\nimport java.util.concurrent.TimeUnit\r\n\r\nclass PasswordListPresenter<V:PasswordListMvp.View>:BasePresenter<V>(),PasswordListMvp.Presenter<V>{\r\n\r\n\r\n\r\n    override fun deletePassword(password : PasswordItem) {\r\n        compositeDisposable.add(dataManager.getAppDatabase().passwordItemDoa().deletePasswordItem(password)\r\n            .compose(schedulerProvider.ioToMainCompletableScheduler())\r\n            .subscribe{\r\n                getMvpView()?.onItemDeleted(password)\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    override fun getPasswords(query : String,label : Label?) {\r\n        compositeDisposable.add(dataManager.getAppDatabase().passwordItemDoa().getPasswordList()\r\n            .compose(schedulerProvider.ioToMainFlowableScheduler())\r\n            .subscribe({\r\n                var results : ArrayList<PasswordItem> = ArrayList()\r\n                if (label == null){\r\n                    for (passwordItem in  it){\r\n                        if (passwordItem.title.contains(query)) results.add(passwordItem)\r\n                    }\r\n                    getMvpView()!!.notifyAdapter(results)\r\n                }else{\r\n\r\n                    for ( i in it.indices) {\r\n                        if (it[i].label == label && it[i].title.contains(query)) results.add(it[i])\r\n\r\n                    }\r\n                    getMvpView()?.setToolbarTitle(label)\r\n                    getMvpView()!!.notifyAdapter(results)\r\n                }\r\n\r\n            }, {\r\n                getMvpView()!!.showMessage(it.localizedMessage!!)\r\n            })\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n    override fun onItemClicked(passwordItem : PasswordItem,position:Int) {\r\n        if (getMvpView()?.getActionMode() != null){\r\n            getMvpView()?.toggleItemSelection(position)\r\n        }else{\r\n            getMvpView()?.openPasswordEditorActivity(passwordItem)\r\n        }\r\n\r\n    }\r\n\r\n    override fun onItemLongClicked(position : Int) {\r\n        if (getMvpView()!!.getActionMode() == null){\r\n            getMvpView()!!.enableActionMode(position)\r\n        }\r\n    }\r\n\r\n    override fun getSearchResults(searchView : SearchView) {\r\n        compositeDisposable.add(RxSearchObservable.fromView(searchView)\r\n            .debounce(300, TimeUnit.MILLISECONDS)\r\n            .filter { text ->\r\n                text.isNotEmpty()\r\n            }\r\n            .distinctUntilChanged()\r\n            .subscribeOn(Schedulers.io())\r\n            .observeOn(AndroidSchedulers.mainThread())\r\n            .subscribe{\r\n               getPasswords(it,null)\r\n            })\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListPresenter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListPresenter.kt	(date 1605282389004)
@@ -28,7 +28,7 @@
         compositeDisposable.add(dataManager.getAppDatabase().passwordItemDoa().getPasswordList()
             .compose(schedulerProvider.ioToMainFlowableScheduler())
             .subscribe({
-                var results : ArrayList<PasswordItem> = ArrayList()
+                val results : ArrayList<PasswordItem> = ArrayList()
                 if (label == null){
                     for (passwordItem in  it){
                         if (passwordItem.title.contains(query)) results.add(passwordItem)
@@ -52,9 +52,6 @@
 
         )
     }
-
-
-
     override fun onItemClicked(passwordItem : PasswordItem,position:Int) {
         if (getMvpView()?.getActionMode() != null){
             getMvpView()?.toggleItemSelection(position)
Index: app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.passwords\r\n\r\nimport android.content.Context\r\nimport android.util.SparseBooleanArray\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.View.GONE\r\nimport android.view.View.VISIBLE\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.RelativeLayout\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.soufianekre.redpass.data.db.models.PasswordItem\r\nimport com.soufianekre.redpass.helpers.AppHelper\r\nimport com.soufianekre.redpass.helpers.DateHelper\r\nimport com.soufianekre.redpass.helpers.FlipAnimator\r\nimport kotlinx.android.synthetic.main.card_password_item.view.*\r\nimport java.util.*\r\n\r\n\r\nclass PasswordListAdapter(context: Context, private var passwordList: ArrayList<PasswordItem>,private var listener :PasswordListAdapterListener) :\r\n    RecyclerView.Adapter<PasswordListAdapter.PasswordListViewHolder>() {\r\n\r\n\r\n    private var TIME_FORMAT: String = \"hh:mm\"\r\n    var mContext: Context = context\r\n    private var selectedItems : SparseBooleanArray = SparseBooleanArray(passwordList.size)\r\n    private var animationItemsIndex : SparseBooleanArray = SparseBooleanArray(passwordList.size)\r\n\r\n    var current_item_selected = -1\r\n    var reverseAllAnimations = false\r\n    var selection_mode :Boolean = false\r\n\r\n\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PasswordListViewHolder {\r\n        val view = LayoutInflater.from(mContext).inflate(com.soufianekre.redpass.R.layout.card_password_item,parent,false)\r\n        return PasswordListViewHolder(view)\r\n    }\r\n\r\n    override fun getItemCount(): Int = passwordList.size\r\n\r\n    override fun onBindViewHolder(holder: PasswordListViewHolder, position: Int) {\r\n        var passwordItem  = passwordList[position]\r\n\r\n        // change the row state to activated\r\n        holder.itemView.isActivated = selectedItems.get(position, false);\r\n\r\n        holder.passwordTitleText.text = passwordItem.title\r\n        holder.passwordIconText.text = passwordItem.account_use.toUpperCase()[0].toString()\r\n        holder.passwordIconImg.setColorFilter(AppHelper.getRandomMaterialColor(mContext,400))\r\n        holder.passwordUseTitle.text = passwordItem.account_use\r\n\r\n        holder.passwordCreationDateText.text = DateHelper.format(mContext, Date().time,TIME_FORMAT)\r\n\r\n\r\n        setListeners(holder,position)\r\n        applyIconAnimation(holder,position)\r\n    }\r\n\r\n    private fun setListeners(holder: PasswordListViewHolder, position:Int){\r\n\r\n\r\n        holder.itemView.setOnClickListener{\r\n            if (!selection_mode)\r\n                listener.onItemClicked(passwordList[position],position)\r\n            else\r\n                toggleSelection(position)\r\n        }\r\n        holder.itemView.setOnLongClickListener{\r\n            listener.onItemLongClicked(position)\r\n            return@setOnLongClickListener true\r\n        }\r\n    }\r\n\r\n\r\n\r\n    fun addAll(passwords : List<PasswordItem>){\r\n        passwordList.clear()\r\n        passwordList.addAll(passwords)\r\n        notifyDataSetChanged()\r\n\r\n    }\r\n\r\n    fun remove(password: PasswordItem){\r\n        for (i in 0..passwordList.size){\r\n            if( password == passwordList[i]){\r\n                passwordList.remove(password)\r\n                notifyItemRemoved(i)\r\n            }\r\n        }\r\n    }\r\n\r\n    // Selection\r\n    fun toggleSelection(pos: Int) {\r\n        current_item_selected = pos\r\n        if (selectedItems.get(pos, false)) {\r\n            selectedItems.delete(pos)\r\n\r\n        } else {\r\n            selectedItems.put(pos, true)\r\n        }\r\n        notifyItemChanged(pos)\r\n    }\r\n\r\n    fun selectAll() {\r\n        if (passwordList.size > 1) {\r\n            for (i in 0 until passwordList.size) {\r\n                selectedItems.put(i, true)\r\n            }\r\n        }\r\n        notifyDataSetChanged()\r\n\r\n\r\n    }\r\n    fun clearSelection() {\r\n        selectedItems.clear()\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    fun getSelectedItemCount(): Int {\r\n        return selectedItems.size()\r\n    }\r\n\r\n    fun getSelectedItems(): List<Int> {\r\n        val items = ArrayList<Int>(selectedItems.size())\r\n        for (i in 0 until selectedItems.size()) {\r\n            items.add(selectedItems.keyAt(i))\r\n        }\r\n        return items\r\n    }\r\n\r\n\r\n    private fun applyIconAnimation(holder: PasswordListViewHolder, position: Int) {\r\n        if (selectedItems[position, false]) {\r\n            holder.iconFront.visibility = GONE\r\n            resetIconYAxis(holder.iconBack)\r\n            holder.iconBack.visibility = VISIBLE\r\n            holder.iconBack.alpha = 1f\r\n            if (current_item_selected == position) {\r\n                FlipAnimator.flipView(mContext, holder.iconBack, holder.iconFront, true)\r\n                resetCurrentIndex()\r\n            }\r\n        } else {\r\n            holder.iconBack.visibility = GONE\r\n            resetIconYAxis(holder.iconFront)\r\n            holder.iconFront.visibility = VISIBLE\r\n            holder.iconFront.alpha = 1f\r\n            if (reverseAllAnimations && animationItemsIndex.get(position, false)\r\n                || current_item_selected == position) {\r\n                FlipAnimator.flipView(mContext, holder.iconBack, holder.iconFront, false)\r\n                resetCurrentIndex()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // As the views will be reused, sometimes the icon appears as\r\n    // flipped because older view is reused. Reset the Y-axis to 0\r\n    private fun resetIconYAxis(view: View) {\r\n        if (view.rotationY != 0f) {\r\n            view.rotationY = 0f\r\n        }\r\n    }\r\n\r\n    fun resetAnimationIndex() {\r\n        reverseAllAnimations = false\r\n        animationItemsIndex.clear()\r\n    }\r\n\r\n    private fun  resetCurrentIndex(){\r\n        current_item_selected = -1\r\n    }\r\n\r\n\r\n    inner class PasswordListViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n\r\n        var iconBack : RelativeLayout = itemView.icon_back\r\n\r\n        var iconFront : RelativeLayout = itemView.icon_front\r\n\r\n        var passwordIconImg : ImageView = itemView.password_icon_img\r\n\r\n        var passwordIconText:TextView = itemView.password_icon_text\r\n\r\n        var passwordTitleText :TextView = itemView.password_title\r\n\r\n        var passwordUseTitle: TextView = itemView.password_account_use_title\r\n\r\n        var passwordCreationDateText:TextView = itemView.password_creation_date_text\r\n\r\n    }\r\n\r\n    interface PasswordListAdapterListener{\r\n        fun onItemClicked(passwordItem: PasswordItem,position: Int)\r\n        fun onItemLongClicked(position : Int)\r\n\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListAdapter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/passwords/PasswordListAdapter.kt	(date 1606151238213)
@@ -2,30 +2,33 @@
 
 import android.content.Context
 import android.util.SparseBooleanArray
+import android.view.HapticFeedbackConstants
 import android.view.LayoutInflater
 import android.view.View
 import android.view.View.GONE
 import android.view.View.VISIBLE
 import android.view.ViewGroup
-import android.widget.ImageView
-import android.widget.RelativeLayout
-import android.widget.TextView
+import android.widget.*
 import androidx.recyclerview.widget.RecyclerView
 import com.soufianekre.redpass.data.db.models.PasswordItem
 import com.soufianekre.redpass.helpers.AppHelper
 import com.soufianekre.redpass.helpers.DateHelper
 import com.soufianekre.redpass.helpers.FlipAnimator
-import kotlinx.android.synthetic.main.card_password_item.view.*
+import com.soufianekre.redpass.helpers.MyTimeUtils
+import kotlinx.android.synthetic.main.item_password_card.view.*
 import java.util.*
+import kotlin.collections.ArrayList
 
 
-class PasswordListAdapter(context: Context, private var passwordList: ArrayList<PasswordItem>,private var listener :PasswordListAdapterListener) :
-    RecyclerView.Adapter<PasswordListAdapter.PasswordListViewHolder>() {
+class PasswordListAdapter(context: Context, private var passwordList: ArrayList<PasswordItem>,
+                          private var listener :PasswordListAdapterListener) :
+    RecyclerView.Adapter<PasswordListAdapter.PasswordListViewHolder>() ,Filterable{
 
+    private var passwordItemsFiltered : ArrayList<PasswordItem> = ArrayList()
 
     private var TIME_FORMAT: String = "hh:mm"
     var mContext: Context = context
-    private var selectedItems : SparseBooleanArray = SparseBooleanArray(passwordList.size)
+    private var selectedItems : SparseBooleanArray = SparseBooleanArray()
     private var animationItemsIndex : SparseBooleanArray = SparseBooleanArray(passwordList.size)
 
     var current_item_selected = -1
@@ -35,14 +38,14 @@
 
 
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PasswordListViewHolder {
-        val view = LayoutInflater.from(mContext).inflate(com.soufianekre.redpass.R.layout.card_password_item,parent,false)
+        val view = LayoutInflater.from(mContext).inflate(com.soufianekre.redpass.R.layout.item_password_card,parent,false)
         return PasswordListViewHolder(view)
     }
 
     override fun getItemCount(): Int = passwordList.size
 
     override fun onBindViewHolder(holder: PasswordListViewHolder, position: Int) {
-        var passwordItem  = passwordList[position]
+        val passwordItem  = passwordList[position]
 
         // change the row state to activated
         holder.itemView.isActivated = selectedItems.get(position, false);
@@ -52,24 +55,19 @@
         holder.passwordIconImg.setColorFilter(AppHelper.getRandomMaterialColor(mContext,400))
         holder.passwordUseTitle.text = passwordItem.account_use
 
-        holder.passwordCreationDateText.text = DateHelper.format(mContext, Date().time,TIME_FORMAT)
-
+        holder.passwordCreationDateText.text = MyTimeUtils.formatTimestamp(mContext,passwordItem.lastUpdatedDate)
 
         setListeners(holder,position)
         applyIconAnimation(holder,position)
     }
 
     private fun setListeners(holder: PasswordListViewHolder, position:Int){
-
-
         holder.itemView.setOnClickListener{
-            if (!selection_mode)
-                listener.onItemClicked(passwordList[position],position)
-            else
-                toggleSelection(position)
+           listener.onItemClicked(passwordList[position],position)
         }
         holder.itemView.setOnLongClickListener{
             listener.onItemLongClicked(position)
+            it.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
             return@setOnLongClickListener true
         }
     }
@@ -92,6 +90,15 @@
         }
     }
 
+    fun selectAll() {
+        if (passwordList.size > 1) {
+            for (i in 0 until passwordList.size) {
+                selectedItems.put(i, true)
+            }
+        }
+        notifyDataSetChanged()
+    }
+
     // Selection
     fun toggleSelection(pos: Int) {
         current_item_selected = pos
@@ -104,16 +111,7 @@
         notifyItemChanged(pos)
     }
 
-    fun selectAll() {
-        if (passwordList.size > 1) {
-            for (i in 0 until passwordList.size) {
-                selectedItems.put(i, true)
-            }
-        }
-        notifyDataSetChanged()
 
-
-    }
     fun clearSelection() {
         selectedItems.clear()
         notifyDataSetChanged()
@@ -198,5 +196,38 @@
 
     }
 
+    // filter results
+    override fun getFilter(): Filter {
+        return object : Filter() {
+            override fun performFiltering(charSequence: CharSequence): FilterResults? {
+                val charString = charSequence.toString()
+                if (charString.isEmpty()) {
+                    passwordItemsFiltered = passwordList
+                } else {
+                    val filteredList: MutableList<PasswordItem> = ArrayList()
+                    for (passwordItem in passwordList) {
+
+                        // here we are looking for name or phone number match
+                        if (passwordItem.title.toLowerCase().contains(charString.toLowerCase())) {
+                            filteredList.add(passwordItem)
+                        }
+                    }
+                    passwordItemsFiltered.clear();
+                    passwordItemsFiltered.addAll(filteredList);
+                }
+                val filterResults = FilterResults()
+                filterResults.values = passwordItemsFiltered
+                return filterResults
+            }
+
+            override fun publishResults(
+                charSequence: CharSequence?,
+                filterResults: FilterResults) {
+                passwordItemsFiltered = filterResults.values as ArrayList<PasswordItem>
+                notifyDataSetChanged()
+            }
+        }
+    }
+
 }
 
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\napply plugin: 'kotlin-android'\r\n\r\napply plugin: 'kotlin-android-extensions'\r\n\r\napply plugin:'kotlin-kapt'\r\n\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.2\"\r\n    defaultConfig {\r\n        applicationId \"com.soufianekre.redpass\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        javaCompileOptions {\r\n            annotationProcessorOptions {\r\n                arguments = [\r\n                        \"room.schemaLocation\":\"$projectDir/schemas\".toString(),\r\n                        \"room.incremental\":\"true\",\r\n                        \"room.expandProjection\":\"true\"]\r\n            }\r\n        }\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.security:security-crypto:1.0.0-alpha02'\r\n    def room_version = \"2.2.5\"\r\n    def butter_knife_version = \"10.2.0\"\r\n    def rxjava_kotlin = \"2.2.1\"\r\n    def rxandroid =\"2.1.1\"\r\n\r\n\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'androidx.core:core-ktx:1.3.0'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n    implementation \"com.google.android.material:material:1.1.0\"\r\n    implementation \"androidx.preference:preference:1.1.1\"\r\n\r\n\r\n    implementation \"androidx.room:room-rxjava2:$room_version\"\r\n    implementation \"androidx.room:room-runtime:$room_version\"\r\n    kapt \"androidx.room:room-compiler:$room_version\"\r\n\r\n    // reactive\r\n    implementation \"io.reactivex.rxjava2:rxjava:$rxjava_kotlin\"\r\n    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'\r\n\r\n\r\n    // Gson\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n    //butter knife\r\n    implementation \"com.jakewharton:butterknife:$butter_knife_version\"\r\n    kapt \"com.jakewharton:butterknife-compiler:$butter_knife_version\"\r\n\r\n    // dexter permission\r\n    implementation 'com.karumi:dexter:6.0.1'\r\n\r\n    // https://github.com/tozny/java-aes-crypto\r\n    implementation 'com.github.tozny:java-aes-crypto:1.1.0'\r\n\r\n    // https://github.com/GoSimpleLLC/nbvcxz\r\n    implementation group: 'me.gosimple', name: 'nbvcxz', version: '1.3.1'\r\n\r\n    // https://github.com/nulab/zxcvbn4j\r\n    implementation 'com.nulab-inc:zxcvbn:1.2.3'\r\n\r\n    // about + License\r\n    implementation \"com.mikepenz:aboutlibraries:8.3.0\"\r\n    implementation 'com.github.daniel-stoneuk:material-about-library:3.1.2'\r\n\r\n    // pattern lock\r\n    implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'\r\n\r\n    // icons\r\n    // icons\r\n    implementation 'com.mikepenz:iconics-core:3.0.3@aar'\r\n    implementation \"com.mikepenz:iconics-views:3.0.3@aar\"\r\n    implementation 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'\r\n    implementation 'com.mikepenz:community-material-typeface:2.0.46.1@aar'\r\n    implementation 'com.mikepenz:fontawesome-typeface:4.7.0.2@aar'\r\n\r\n\r\n    // Optional, for RxJava2 adapter\r\n    implementation 'com.andrognito.patternlockview:patternlockview-reactive:1.0.0'\r\n\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n\r\n\r\n\r\n    debugImplementation 'cat.ereza:customactivityoncrash:2.2.0'\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n    /*debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0'\r\n    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/build.gradle	(date 1602433807279)
@@ -36,7 +36,10 @@
 }
 
 dependencies {
-    implementation 'androidx.security:security-crypto:1.0.0-alpha02'
+    //implementation 'androidx.security:security-crypto:1.0.0-alpha02'
+
+    def biometric_version = "1.0.0"
+
     def room_version = "2.2.5"
     def butter_knife_version = "10.2.0"
     def rxjava_kotlin = "2.2.1"
@@ -60,7 +63,8 @@
     // reactive
     implementation "io.reactivex.rxjava2:rxjava:$rxjava_kotlin"
     implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
-
+    // finger print
+    implementation "androidx.biometric:biometric:$biometric_version"
 
     // Gson
     implementation 'com.google.code.gson:gson:2.8.6'
Index: app/src/main/java/com/soufianekre/redpass/ui/password_editor/PasswordEditorActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.password_editor\r\n\r\nimport android.os.Bundle\r\nimport android.text.method.HideReturnsTransformationMethod\r\nimport android.text.method.PasswordTransformationMethod\r\nimport android.view.Menu\r\nimport android.view.MenuItem\r\nimport android.widget.Button\r\nimport android.widget.EditText\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.widget.Toolbar\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.data.db.models.PasswordItem\r\nimport com.soufianekre.redpass.helpers.AppConst.PASSWORD_TO_EDIT\r\nimport com.soufianekre.redpass.helpers.InputHelper\r\nimport com.soufianekre.redpass.helpers.PasswordUtils\r\nimport com.soufianekre.redpass.ui.base.BaseActivity\r\nimport com.soufianekre.redpass.ui.password_editor.label_chooser.LabelChooserDialog\r\n\r\nclass PasswordEditorActivity :BaseActivity(),PasswordEditorMvp.View{\r\n\r\n\r\n    private var LABEL_CHOOSER_DIALOG_TAG : String = \"label_chooser_dialog\"\r\n    // widgets\r\n\r\n    @BindView(R.id.app_toolbar)\r\n    lateinit var toolbar : Toolbar\r\n\r\n\r\n    @BindView(R.id.pass_chosen_category)\r\n    lateinit var passwordEditorChosenLabel : TextView\r\n\r\n    @BindView(R.id.pass_title_field)\r\n    lateinit var passwordEditorTitleField:EditText\r\n\r\n\r\n\r\n    @BindView(R.id.pass_username_field)\r\n    lateinit var passwordEditorUsernameField:EditText\r\n\r\n    @BindView(R.id.pass_password_field)\r\n    lateinit var passwordField:EditText\r\n\r\n    @BindView(R.id.pass_account_use_field)\r\n    lateinit var passwordEditorAccountUseField:EditText\r\n\r\n    @BindView(R.id.pass_notes_field)\r\n    lateinit var passwordEditorNotesField:EditText\r\n\r\n    @BindView(R.id.pass_label_btn)\r\n    lateinit var setLabelBtn : Button\r\n\r\n    @BindView(R.id.password_show_hide_img)\r\n    lateinit var passwordShowHideBtn : ImageView\r\n\r\n    @BindView(R.id.password_generate_img)\r\n    lateinit var passwordGenerationBtn : ImageView\r\n\r\n    private  var currentPasswordItem : PasswordItem? = null\r\n    private var passwordLabel : Label? = null\r\n\r\n    lateinit var mPresenter : PasswordEditorMvp.Presenter<PasswordEditorMvp.View>\r\n\r\n    private var isPasswordHidden = true\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_password_editor)\r\n        ButterKnife.bind(this)\r\n        mPresenter = PasswordEditorPresenter()\r\n        mPresenter.onAttach(this)\r\n        if (savedInstanceState == null)\r\n            checkIntent()\r\n        else\r\n            currentPasswordItem = savedInstanceState.getSerializable(PASSWORD_ITEM) as PasswordItem\r\n        setupUi()\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        mPresenter.onDetach()\r\n    }\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\r\n        menuInflater.inflate(R.menu.menu_password_editor,menu)\r\n        return true\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        when(item.itemId){\r\n            R.id.menu_password_editor_save -> {\r\n                savePassword()\r\n                return true\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item)\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        super.onBackPressed()\r\n    }\r\n\r\n    override fun onSaveInstanceState(outState: Bundle) {\r\n        super.onSaveInstanceState(outState)\r\n        outState.putSerializable(PASSWORD_ITEM,currentPasswordItem)\r\n    }\r\n\r\n    private fun checkIntent() {\r\n        currentPasswordItem= intent.getSerializableExtra(PASSWORD_TO_EDIT) as? PasswordItem\r\n        if (currentPasswordItem!= null){\r\n\r\n            getAccountData()\r\n        }\r\n\r\n    }\r\n\r\n    private fun getAccountData() {\r\n        passwordEditorTitleField.setText(currentPasswordItem!!.title)\r\n        passwordEditorAccountUseField.setText( currentPasswordItem!!.account_use)\r\n        passwordEditorUsernameField.setText( currentPasswordItem!!.username)\r\n        passwordField.setText( currentPasswordItem!!.password)\r\n\r\n        passwordEditorNotesField.setText( currentPasswordItem!!.notes)\r\n        passwordLabel = currentPasswordItem!!.label\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private fun setupUi(){\r\n\r\n        setSupportActionBar(toolbar)\r\n        supportActionBar!!.setDisplayHomeAsUpEnabled(true)\r\n        toolbar.setNavigationOnClickListener {\r\n            onBackPressed()\r\n        }\r\n\r\n\r\n        passwordGenerationBtn.setOnClickListener{\r\n            passwordField.setText(PasswordUtils.generateRandomPassword(8))\r\n        }\r\n        passwordShowHideBtn.setOnClickListener{\r\n            if(isPasswordHidden){\r\n                passwordField.transformationMethod = HideReturnsTransformationMethod.getInstance()\r\n                isPasswordHidden = false\r\n            } else{\r\n                passwordField.transformationMethod = PasswordTransformationMethod.getInstance()\r\n                isPasswordHidden = true\r\n            }\r\n        }\r\n        setLabelBtn.setOnClickListener{\r\n            val dialog = LabelChooserDialog()\r\n            dialog.show(this@PasswordEditorActivity.supportFragmentManager,\"label_dialog\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    private fun checkSubmittedData(): Boolean {\r\n        var result =true\r\n        if (InputHelper.isEmpty(passwordEditorTitleField)){\r\n            passwordEditorTitleField.error = \"You Should Set A Title\"\r\n            result =false\r\n        } else if (InputHelper.isEmpty(passwordEditorUsernameField)){\r\n            passwordEditorUsernameField.error = \"You Should Set A UserName\"\r\n            result =false\r\n        }else if (InputHelper.isEmpty(passwordEditorAccountUseField)){\r\n            passwordEditorAccountUseField.error = \"You Should Set A The Use of The Account\"\r\n            result =false\r\n        }else if(InputHelper.isEmpty(passwordField)){\r\n            passwordField.error = \"You Should Set A Password\"\r\n            result =false\r\n\r\n        }\r\n        return result\r\n    }\r\n\r\n    override fun saveAndFinish() {\r\n        finish()\r\n    }\r\n\r\n    fun setLabelFromDialog(label : Label){\r\n        passwordLabel = label\r\n        passwordEditorChosenLabel.text = label.name\r\n    }\r\n\r\n\r\n\r\n    private fun savePassword(){\r\n        if (checkSubmittedData()){\r\n            if (currentPasswordItem == null){\r\n                currentPasswordItem = PasswordItem()\r\n                currentPasswordItem!!.title = passwordEditorTitleField.text.toString()\r\n                currentPasswordItem!!.username = passwordEditorUsernameField.text.toString()\r\n                currentPasswordItem!!.password = passwordField.text.toString()\r\n                currentPasswordItem!!.account_use = passwordEditorAccountUseField.text.toString()\r\n                currentPasswordItem!!.notes = passwordEditorNotesField.text.toString()\r\n                if (passwordLabel != null)\r\n                    currentPasswordItem!!.label = passwordLabel as Label\r\n                mPresenter.addPasswordItem(currentPasswordItem!!)\r\n            }else{\r\n                currentPasswordItem!!.title = passwordEditorTitleField.text.toString()\r\n                currentPasswordItem!!.password = passwordField.text.toString()\r\n                currentPasswordItem!!.username = passwordEditorUsernameField.text.toString()\r\n                currentPasswordItem!!.account_use = passwordEditorAccountUseField.text.toString()\r\n                currentPasswordItem!!.notes = passwordEditorNotesField.text.toString()\r\n                if (passwordLabel != null)\r\n                    currentPasswordItem!!.label = passwordLabel as Label\r\n                mPresenter.updatePassword(currentPasswordItem!!)\r\n            }\r\n            saveAndFinish()\r\n        }\r\n    }\r\n\r\n    companion object {\r\n        //const\r\n        const val PASSWORD_ITEM = \"password_item\"\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/password_editor/PasswordEditorActivity.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/password_editor/PasswordEditorActivity.kt	(date 1600802400928)
@@ -12,6 +12,7 @@
 import androidx.appcompat.widget.Toolbar
 import butterknife.BindView
 import butterknife.ButterKnife
+import com.google.android.material.chip.Chip
 import com.soufianekre.redpass.R
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.data.db.models.PasswordItem
@@ -31,8 +32,8 @@
     lateinit var toolbar : Toolbar
 
 
-    @BindView(R.id.pass_chosen_category)
-    lateinit var passwordEditorChosenLabel : TextView
+    @BindView(R.id.chip_password_label)
+    lateinit var passwordEditorChosenLabel : Chip
 
     @BindView(R.id.pass_title_field)
     lateinit var passwordEditorTitleField:EditText
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.soufianekre.redpass\">\r\n\r\n    <application\r\n        android:name=\"com.soufianekre.redpass.MyApp\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\"\r\n        tools:ignore=\"GoogleAppIndexingWarning\">\r\n\r\n\r\n        <activity android:name=\"com.soufianekre.redpass.ui.intro.IntroActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n\r\n            </intent-filter>\r\n\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.SEARCH\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\"com.soufianekre.redpass.ui.main.MainActivity\"/>\r\n\r\n        <activity android:name=\"com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity\"\r\n            android:parentActivityName=\"com.soufianekre.redpass.ui.main.MainActivity\"\r\n            android:windowSoftInputMode=\"adjustResize\"/>\r\n\r\n        <activity android:name=\"com.soufianekre.redpass.ui.labels.LabelsActivity\"\r\n            android:parentActivityName=\"com.soufianekre.redpass.ui.main.MainActivity\"/>\r\n\r\n        <activity android:name=\"com.soufianekre.redpass.ui.intro.AppPasswordActivity\"\r\n            android:parentActivityName=\"com.soufianekre.redpass.ui.main.MainActivity\"/>\r\n\r\n        <activity android:name=\"com.soufianekre.redpass.ui.settings.SettingsActivity\"\r\n            android:parentActivityName=\"com.soufianekre.redpass.ui.main.MainActivity\"/>\r\n\r\n\r\n        <activity android:name=\".ui.about.AboutActivity\"\r\n            android:parentActivityName=\".ui.settings.SettingsActivity\"/>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/AndroidManifest.xml	(date 1605285178182)
@@ -3,6 +3,10 @@
     xmlns:tools="http://schemas.android.com/tools"
     package="com.soufianekre.redpass">
 
+    <uses-permission android:name="android.permission.USE_BIOMETRIC"/>
+    <uses-feature android:name="android.name.fingerprint"
+        android:required="false"/>
+
     <application
         android:name="com.soufianekre.redpass.MyApp"
         android:allowBackup="true"
@@ -17,18 +21,16 @@
         <activity android:name="com.soufianekre.redpass.ui.intro.IntroActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-
                 <category android:name="android.intent.category.LAUNCHER" />
-
             </intent-filter>
+        </activity>
 
+        <activity android:name="com.soufianekre.redpass.ui.main.MainActivity">
             <intent-filter>
                 <action android:name="android.intent.action.SEARCH" />
             </intent-filter>
         </activity>
 
-        <activity android:name="com.soufianekre.redpass.ui.main.MainActivity"/>
-
         <activity android:name="com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity"
             android:parentActivityName="com.soufianekre.redpass.ui.main.MainActivity"
             android:windowSoftInputMode="adjustResize"/>
@@ -43,7 +45,12 @@
             android:parentActivityName="com.soufianekre.redpass.ui.main.MainActivity"/>
 
 
-        <activity android:name=".ui.about.AboutActivity"
+        <activity android:name=".ui.settings.about.AboutActivity"
+            android:parentActivityName=".ui.settings.SettingsActivity"/>
+
+        <activity android:name=".ui.settings.security.SecurityPrefActivity"
+            android:parentActivityName=".ui.settings.SettingsActivity"/>
+        <activity android:name=".ui.settings.database.DatabasePrefActivity"
             android:parentActivityName=".ui.settings.SettingsActivity"/>
     </application>
 
Index: app/src/main/res/drawable/ic_outline_settings_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:tint=\"#060606\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M19.43,12.98c0.04,-0.32 0.07,-0.64 0.07,-0.98 0,-0.34 -0.03,-0.66 -0.07,-0.98l2.11,-1.65c0.19,-0.15 0.24,-0.42 0.12,-0.64l-2,-3.46c-0.09,-0.16 -0.26,-0.25 -0.44,-0.25 -0.06,0 -0.12,0.01 -0.17,0.03l-2.49,1c-0.52,-0.4 -1.08,-0.73 -1.69,-0.98l-0.38,-2.65C14.46,2.18 14.25,2 14,2h-4c-0.25,0 -0.46,0.18 -0.49,0.42l-0.38,2.65c-0.61,0.25 -1.17,0.59 -1.69,0.98l-2.49,-1c-0.06,-0.02 -0.12,-0.03 -0.18,-0.03 -0.17,0 -0.34,0.09 -0.43,0.25l-2,3.46c-0.13,0.22 -0.07,0.49 0.12,0.64l2.11,1.65c-0.04,0.32 -0.07,0.65 -0.07,0.98 0,0.33 0.03,0.66 0.07,0.98l-2.11,1.65c-0.19,0.15 -0.24,0.42 -0.12,0.64l2,3.46c0.09,0.16 0.26,0.25 0.44,0.25 0.06,0 0.12,-0.01 0.17,-0.03l2.49,-1c0.52,0.4 1.08,0.73 1.69,0.98l0.38,2.65c0.03,0.24 0.24,0.42 0.49,0.42h4c0.25,0 0.46,-0.18 0.49,-0.42l0.38,-2.65c0.61,-0.25 1.17,-0.59 1.69,-0.98l2.49,1c0.06,0.02 0.12,0.03 0.18,0.03 0.17,0 0.34,-0.09 0.43,-0.25l2,-3.46c0.12,-0.22 0.07,-0.49 -0.12,-0.64l-2.11,-1.65zM17.45,11.27c0.04,0.31 0.05,0.52 0.05,0.73 0,0.21 -0.02,0.43 -0.05,0.73l-0.14,1.13 0.89,0.7 1.08,0.84 -0.7,1.21 -1.27,-0.51 -1.04,-0.42 -0.9,0.68c-0.43,0.32 -0.84,0.56 -1.25,0.73l-1.06,0.43 -0.16,1.13 -0.2,1.35h-1.4l-0.19,-1.35 -0.16,-1.13 -1.06,-0.43c-0.43,-0.18 -0.83,-0.41 -1.23,-0.71l-0.91,-0.7 -1.06,0.43 -1.27,0.51 -0.7,-1.21 1.08,-0.84 0.89,-0.7 -0.14,-1.13c-0.03,-0.31 -0.05,-0.54 -0.05,-0.74s0.02,-0.43 0.05,-0.73l0.14,-1.13 -0.89,-0.7 -1.08,-0.84 0.7,-1.21 1.27,0.51 1.04,0.42 0.9,-0.68c0.43,-0.32 0.84,-0.56 1.25,-0.73l1.06,-0.43 0.16,-1.13 0.2,-1.35h1.39l0.19,1.35 0.16,1.13 1.06,0.43c0.43,0.18 0.83,0.41 1.23,0.71l0.91,0.7 1.06,-0.43 1.27,-0.51 0.7,1.21 -1.07,0.85 -0.89,0.7 0.14,1.13zM12,8c-2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4zM12,14c-1.1,0 -2,-0.9 -2,-2s0.9,-2 2,-2 2,0.9 2,2 -0.9,2 -2,2z\"/>\r\n</vector>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_outline_settings_24.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/drawable/ic_outline_settings_24.xml	(date 1606162689647)
@@ -1,4 +1,4 @@
-<vector android:height="24dp" android:tint="#060606"
+<vector android:height="24dp" android:tint="#3C3F41"
     android:viewportHeight="24" android:viewportWidth="24"
     android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M19.43,12.98c0.04,-0.32 0.07,-0.64 0.07,-0.98 0,-0.34 -0.03,-0.66 -0.07,-0.98l2.11,-1.65c0.19,-0.15 0.24,-0.42 0.12,-0.64l-2,-3.46c-0.09,-0.16 -0.26,-0.25 -0.44,-0.25 -0.06,0 -0.12,0.01 -0.17,0.03l-2.49,1c-0.52,-0.4 -1.08,-0.73 -1.69,-0.98l-0.38,-2.65C14.46,2.18 14.25,2 14,2h-4c-0.25,0 -0.46,0.18 -0.49,0.42l-0.38,2.65c-0.61,0.25 -1.17,0.59 -1.69,0.98l-2.49,-1c-0.06,-0.02 -0.12,-0.03 -0.18,-0.03 -0.17,0 -0.34,0.09 -0.43,0.25l-2,3.46c-0.13,0.22 -0.07,0.49 0.12,0.64l2.11,1.65c-0.04,0.32 -0.07,0.65 -0.07,0.98 0,0.33 0.03,0.66 0.07,0.98l-2.11,1.65c-0.19,0.15 -0.24,0.42 -0.12,0.64l2,3.46c0.09,0.16 0.26,0.25 0.44,0.25 0.06,0 0.12,-0.01 0.17,-0.03l2.49,-1c0.52,0.4 1.08,0.73 1.69,0.98l0.38,2.65c0.03,0.24 0.24,0.42 0.49,0.42h4c0.25,0 0.46,-0.18 0.49,-0.42l0.38,-2.65c0.61,-0.25 1.17,-0.59 1.69,-0.98l2.49,1c0.06,0.02 0.12,0.03 0.18,0.03 0.17,0 0.34,-0.09 0.43,-0.25l2,-3.46c0.12,-0.22 0.07,-0.49 -0.12,-0.64l-2.11,-1.65zM17.45,11.27c0.04,0.31 0.05,0.52 0.05,0.73 0,0.21 -0.02,0.43 -0.05,0.73l-0.14,1.13 0.89,0.7 1.08,0.84 -0.7,1.21 -1.27,-0.51 -1.04,-0.42 -0.9,0.68c-0.43,0.32 -0.84,0.56 -1.25,0.73l-1.06,0.43 -0.16,1.13 -0.2,1.35h-1.4l-0.19,-1.35 -0.16,-1.13 -1.06,-0.43c-0.43,-0.18 -0.83,-0.41 -1.23,-0.71l-0.91,-0.7 -1.06,0.43 -1.27,0.51 -0.7,-1.21 1.08,-0.84 0.89,-0.7 -0.14,-1.13c-0.03,-0.31 -0.05,-0.54 -0.05,-0.74s0.02,-0.43 0.05,-0.73l0.14,-1.13 -0.89,-0.7 -1.08,-0.84 0.7,-1.21 1.27,0.51 1.04,0.42 0.9,-0.68c0.43,-0.32 0.84,-0.56 1.25,-0.73l1.06,-0.43 0.16,-1.13 0.2,-1.35h1.39l0.19,1.35 0.16,1.13 1.06,0.43c0.43,0.18 0.83,0.41 1.23,0.71l0.91,0.7 1.06,-0.43 1.27,-0.51 0.7,1.21 -1.07,0.85 -0.89,0.7 0.14,1.13zM12,8c-2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4zM12,14c-1.1,0 -2,-0.9 -2,-2s0.9,-2 2,-2 2,0.9 2,2 -0.9,2 -2,2z"/>
Index: app/src/main/java/com/soufianekre/redpass/ui/password_editor/label_chooser/LabelChooserDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.password_editor.label_chooser\r\n\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager.VERTICAL\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.BaseDialogFragment\r\nimport com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter\r\nimport com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity\r\n\r\nclass LabelChooserDialog : BaseDialogFragment(),LabelChooserMvp.View {\r\n\r\n\r\n    @BindView(R.id.label_chooser_recycler_view)\r\n    lateinit var labelChooserRecyclerView : RecyclerView\r\n\r\n    @BindView(R.id.label_chooser_add_btn)\r\n    lateinit var labelChooserBtn : Button\r\n\r\n    private lateinit var passwordEditorActivity: PasswordEditorActivity\r\n    private var mPresenter : LabelChooserPresenter<LabelChooserMvp.View>? = null\r\n    private lateinit var labelsAdapter : DrawerLabelsAdapter\r\n\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        passwordEditorActivity = activity as PasswordEditorActivity\r\n\r\n\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        val view :View  = inflater.inflate(R.layout.dialog_label_chooser,container,false)\r\n        mPresenter = LabelChooserPresenter()\r\n        ButterKnife.bind(this,view)\r\n        mPresenter!!.onAttach(this)\r\n        return view\r\n    }\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n        Log.e(\"Label Dialog\",\"Is this visible?\")\r\n\r\n        labelChooserRecyclerView.itemAnimator = DefaultItemAnimator()\r\n        labelChooserRecyclerView.layoutManager = LinearLayoutManager(requireContext()\r\n                ,VERTICAL,false)\r\n\r\n        labelsAdapter = DrawerLabelsAdapter(requireContext(),ArrayList(),mPresenter)\r\n        labelChooserRecyclerView.adapter = labelsAdapter\r\n        mPresenter!!.getLabels()\r\n\r\n\r\n        labelChooserBtn.setOnClickListener{\r\n            dismiss()\r\n        }\r\n\r\n\r\n\r\n    }\r\n    \r\n    override fun onDestroyView() {\r\n        mPresenter!!.onDetach()\r\n        super.onDestroyView()\r\n    }\r\n\r\n    override fun showLabels(labels:ArrayList<Label>){\r\n        labelsAdapter.addAll(labels)\r\n        showMessage(\"Labels : \" +labels.size)\r\n    }\r\n\r\n    override fun setPasswordItemLabel(label: Label) {\r\n        passwordEditorActivity.setLabelFromDialog(label)\r\n        dismiss()\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/password_editor/label_chooser/LabelChooserDialog.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/password_editor/label_chooser/LabelChooserDialog.kt	(date 1606161862871)
@@ -15,7 +15,7 @@
 import com.soufianekre.redpass.R
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.ui.base.BaseDialogFragment
-import com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter
+import com.soufianekre.redpass.ui.main.drawer.NavDrawerLabelsAdapter
 import com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity
 
 class LabelChooserDialog : BaseDialogFragment(),LabelChooserMvp.View {
@@ -29,7 +29,7 @@
 
     private lateinit var passwordEditorActivity: PasswordEditorActivity
     private var mPresenter : LabelChooserPresenter<LabelChooserMvp.View>? = null
-    private lateinit var labelsAdapter : DrawerLabelsAdapter
+    private lateinit var labelsAdapter : NavDrawerLabelsAdapter
 
 
 
@@ -60,7 +60,12 @@
         labelChooserRecyclerView.layoutManager = LinearLayoutManager(requireContext()
                 ,VERTICAL,false)
 
-        labelsAdapter = DrawerLabelsAdapter(requireContext(),ArrayList(),mPresenter)
+        labelsAdapter =
+            NavDrawerLabelsAdapter(
+                requireContext(),
+                ArrayList(),
+                mPresenter
+            )
         labelChooserRecyclerView.adapter = labelsAdapter
         mPresenter!!.getLabels()
 
Index: app/src/main/java/com/soufianekre/redpass/ui/password_editor/label_chooser/LabelChooserMvp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.password_editor.label_chooser\r\n\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.mvp.BaseMvp\r\nimport com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter\r\n\r\nclass LabelChooserMvp{\r\n    interface View : BaseMvp.View{\r\n        fun showLabels(labels : ArrayList<Label>)\r\n        fun setPasswordItemLabel(label : Label)\r\n\r\n    }\r\n    interface Presenter<V : View> : BaseMvp.Presenter<V>,DrawerLabelsAdapter.DrawerLabelsAdapterListener{\r\n        fun getLabels()\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/password_editor/label_chooser/LabelChooserMvp.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/password_editor/label_chooser/LabelChooserMvp.kt	(date 1606161862991)
@@ -2,7 +2,7 @@
 
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.ui.base.mvp.BaseMvp
-import com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter
+import com.soufianekre.redpass.ui.main.drawer.NavDrawerLabelsAdapter
 
 class LabelChooserMvp{
     interface View : BaseMvp.View{
@@ -10,7 +10,8 @@
         fun setPasswordItemLabel(label : Label)
 
     }
-    interface Presenter<V : View> : BaseMvp.Presenter<V>,DrawerLabelsAdapter.DrawerLabelsAdapterListener{
+    interface Presenter<V : View> : BaseMvp.Presenter<V>,
+        NavDrawerLabelsAdapter.DrawerLabelsAdapterListener{
         fun getLabels()
 
     }
Index: app/src/main/java/com/soufianekre/redpass/data/AppDataManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.data\r\n\r\nimport android.content.Context\r\nimport android.content.SharedPreferences\r\nimport androidx.security.crypto.EncryptedSharedPreferences\r\nimport androidx.security.crypto.MasterKeys\r\nimport com.soufianekre.redpass.MyApp\r\nimport com.soufianekre.redpass.data.app_pref.AppPreferenceHelper\r\nimport com.soufianekre.redpass.data.db.AppDatabase\r\n\r\n\r\nclass AppDataManager() :DataManager{\r\n    // en\r\n\r\n    private val appContext: Context\r\n\r\n    init {\r\n        this.appContext = MyApp.getContext()\r\n        val masterKeyAlias = MasterKeys.getOrCreate(MasterKeys.AES256_GCM_SPEC)\r\n        var sharedPreferences: SharedPreferences = EncryptedSharedPreferences.create(\r\n            \"secret_shared_prefs\",\r\n            masterKeyAlias,\r\n            appContext,\r\n            EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,\r\n            EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM\r\n        )\r\n    }\r\n\r\n\r\n    override fun getAppDatabase(): AppDatabase {\r\n        return AppDatabase.getInstance(appContext)\r\n    }\r\n\r\n    override fun getAppPreference(): AppPreferenceHelper {\r\n        return AppPreferenceHelper(appContext)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/data/AppDataManager.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/data/AppDataManager.kt	(date 1606162425905)
@@ -2,28 +2,28 @@
 
 import android.content.Context
 import android.content.SharedPreferences
-import androidx.security.crypto.EncryptedSharedPreferences
-import androidx.security.crypto.MasterKeys
+/*import androidx.security.crypto.EncryptedSharedPreferences
+import androidx.security.crypto.MasterKeys*/
 import com.soufianekre.redpass.MyApp
 import com.soufianekre.redpass.data.app_pref.AppPreferenceHelper
 import com.soufianekre.redpass.data.db.AppDatabase
 
 
 class AppDataManager() :DataManager{
-    // en
+
 
-    private val appContext: Context
+
+    private val appContext: Context = MyApp.getContext()
 
     init {
-        this.appContext = MyApp.getContext()
-        val masterKeyAlias = MasterKeys.getOrCreate(MasterKeys.AES256_GCM_SPEC)
+        /*   val masterKeyAlias = MasterKeys.getOrCreate(MasterKeys.AES256_GCM_SPEC)
         var sharedPreferences: SharedPreferences = EncryptedSharedPreferences.create(
             "secret_shared_prefs",
             masterKeyAlias,
             appContext,
             EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,
             EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM
-        )
+        )*/
     }
 
 
Index: app/src/main/java/com/soufianekre/redpass/data/app_pref/PrefConst.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.data.app_pref\r\n\r\npublic object PrefConst {\r\n\r\n    const val PREF_NAME = \"app_pref\"\r\n    const val PREF_APP_PASSWORD = \"app_password\"\r\n    const val PREF_IS_FIRST_LAUNCH = \"first_launch\"\r\n\r\n\r\n    const val EMPTY_APP_PASSWORD = \"-1\"\r\n\r\n\r\n\r\n    const val PREF_SECURITY = \"pref_security\"\r\n    const val PREF_ABOUT = \"pref_about\"\r\n    const val PREF_STORAGE = \"pref_storage\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/data/app_pref/PrefConst.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/data/app_pref/PrefConst.kt	(date 1606155592810)
@@ -9,9 +9,12 @@
 
     const val EMPTY_APP_PASSWORD = "-1"
 
-
-
     const val PREF_SECURITY = "pref_security"
+    const val PREF_SECURITY_FINGER_PRINT ="pref_security_finger_print"
+    const val PREF_SECURITY_CHANGE_APP_PASSWORD = "pref_security_change_app_password"
+    const val PREF_FAILED_PASSWORD ="pref_failed_password"
+
+
     const val PREF_ABOUT = "pref_about"
     const val PREF_STORAGE = "pref_storage"
 }
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/helpers/MyTimeUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/helpers/MyTimeUtils.kt	(date 1605285315862)
+++ app/src/main/java/com/soufianekre/redpass/helpers/MyTimeUtils.kt	(date 1605285315862)
@@ -0,0 +1,229 @@
+package com.soufianekre.redpass.helpers
+
+import android.content.Context
+import com.soufianekre.redpass.R
+import java.text.SimpleDateFormat
+import java.util.*
+
+object MyTimeUtils {
+
+    val now: Long
+        get() = Date().time
+
+    const val SECOND: Long = 1000
+    val MINUTE = SECOND * 60
+    val HOUR = MINUTE * 60
+    val DAY = HOUR * 24
+    val YEAR = DAY * 365
+
+    val WEEK = DAY * 7
+    val TWO_WEEKS = WEEK * 2
+
+    /**
+     * Gets whether or not we are currently in the night time. This is defined as before 6 AM or
+     * after 10 PM.
+     */
+    val isNight: Boolean
+        get() = isNight(Calendar.getInstance())
+
+    /**
+     * If the next timestamp is more than 15 minutes away, we will display it on the message.
+     *
+     * @param timestamp     the current message's timestamp.
+     * @param nextTimestamp the next message's timestamp. This should be larger than timestamp.
+     * @return true if we should display the timestamp, false otherwise.
+     */
+    fun shouldDisplayTimestamp(timestamp: Long, nextTimestamp: Long): Boolean {
+        return nextTimestamp >= timestamp + 15 * MINUTE
+    }
+
+    /**
+     * Checks whether the timestamp is on the same calendar day as today.
+     *
+     * @param timestamp the timestamp to check.
+     * @return true if same calendar day, false otherwise.
+     */
+    fun isToday(timestamp: Long): Boolean {
+        return isToday(timestamp, now)
+    }
+
+    fun isToday(timestamp: Long, currentTime: Long): Boolean {
+        val current = Calendar.getInstance()
+        current.timeInMillis = currentTime
+        zeroCalendarDay(current)
+
+        val time = Calendar.getInstance()
+        time.timeInMillis = timestamp
+        zeroCalendarDay(time)
+
+        return current.timeInMillis == time.timeInMillis
+    }
+
+    /**
+     * Checks whether the timestamp is on the same calendar day as yesterday.
+     *
+     * @param timestamp the timestamp to check.
+     * @return if if yesterday, false otherwise.
+     */
+    fun isYesterday(timestamp: Long): Boolean {
+        return isYesterday(timestamp, now)
+    }
+
+    fun isYesterday(timestamp: Long, currentTime: Long): Boolean {
+        val current = Calendar.getInstance()
+        current.timeInMillis = currentTime
+        zeroCalendarDay(current)
+        current.set(Calendar.DAY_OF_YEAR, current.get(Calendar.DAY_OF_YEAR) - 1)
+
+        val time = Calendar.getInstance()
+        time.timeInMillis = timestamp
+        zeroCalendarDay(time)
+
+        return current.timeInMillis == time.timeInMillis
+    }
+
+    /**
+     * Checks whether the timestamp is within the last week.
+     */
+    fun isLastWeek(timestamp: Long): Boolean {
+        return isLastWeek(timestamp, now)
+    }
+
+    fun isLastWeek(timestamp: Long, currentTime: Long): Boolean {
+        val lastWeek = Calendar.getInstance()
+        lastWeek.timeInMillis = currentTime
+        zeroCalendarDay(lastWeek)
+        lastWeek.set(Calendar.WEEK_OF_YEAR, lastWeek.get(Calendar.WEEK_OF_YEAR) - 1)
+
+        return timestamp > lastWeek.timeInMillis && timestamp < currentTime
+    }
+
+    /**
+     * Checks whether the timestamp is within the last month.
+     */
+    fun isLastMonth(timestamp: Long): Boolean {
+        return isLastMonth(timestamp, now)
+    }
+
+    fun isLastMonth(timestamp: Long, currentTime: Long): Boolean {
+        val lastMonth = Calendar.getInstance()
+        lastMonth.timeInMillis = currentTime
+        zeroCalendarDay(lastMonth)
+
+        // if the current month is January, then we need to set the last month to be December of the previous year
+        if (lastMonth.get(Calendar.MONTH) == Calendar.JANUARY) {
+            lastMonth.set(Calendar.YEAR, lastMonth.get(Calendar.YEAR) - 1)
+            lastMonth.set(Calendar.MONTH, Calendar.DECEMBER)
+        } else {
+            lastMonth.set(Calendar.MONTH, lastMonth.get(Calendar.MONTH) - 1)
+        }
+
+        return timestamp > lastMonth.timeInMillis && timestamp < currentTime
+    }
+
+    fun today(): Long {
+        val now = Calendar.getInstance()
+        zeroCalendarDay(now)
+        return now.timeInMillis
+    }
+
+    private fun zeroCalendarDay(calendar: Calendar) {
+        calendar.set(Calendar.HOUR_OF_DAY, 0)
+        calendar.set(Calendar.MINUTE, 0)
+        calendar.set(Calendar.SECOND, 0)
+        calendar.set(Calendar.MILLISECOND, 0)
+    }
+
+    /**
+     * Formats the timestamp in a different way depending upon how long ago it was. Times within
+     * 1 day will be just the timestamp (eg 7:30 PM). Times within 7 days will be the day and
+     * the timestamp (eg Sun, 8:22 AM). Times older than that will be the date and the time
+     * (eg 7/4/2016 12:25 PM). These will be formatted according to the device's default locale.
+     *
+     * @param timestamp the timestamp to format.
+     * @return the formatted string.
+     */
+
+    fun formatTimestamp(context: Context, timestamp: Long): String {
+        return formatTimestamp(context, timestamp, MyTimeUtils.now)
+    }
+
+    fun formatTimestamp(context: Context, timestamp: Long, currentTime: Long): String {
+        val date = Date(timestamp)
+        val formatted: String?
+
+        formatted = when {
+            timestamp > currentTime - 2 * MINUTE -> context.getString(R.string.now)
+            timestamp > today() -> formatTime(context, date)
+            timestamp > currentTime - 7 * DAY -> SimpleDateFormat("E", Locale.getDefault()).format(date) + ", " +
+                    formatTime(context, date)
+            timestamp > currentTime - YEAR -> SimpleDateFormat("MMM d", Locale.getDefault()).format(date) + ", " +
+                    formatTime(context, date)
+            else -> SimpleDateFormat("MMM d, yyyy", Locale.getDefault()).format(date) + ", " +
+                    formatTime(context, date)
+        }
+
+        return formatted
+    }
+
+    /**
+     * Formats the timestamp in a different way depending upon how long ago it was. Times within
+     * 1 day will be just the timestamp (eg 7:30 PM). Times within 7 days will be the day and
+     * the timestamp (eg Sun, 8:22 AM). Times older than that will be the date and the time
+     * (eg 7/4/2016 12:25 PM). These will be formatted according to the device's default locale.
+     *
+     * @param timestamp the timestamp to format.
+     * @return the formatted string.
+     */
+    fun formatConversationTimestamp(context: Context, timestamp: Long, currentTime: Long = now): String {
+        val date = Date(timestamp)
+        val formatted: String?
+
+        formatted = when {
+            timestamp > today() -> formatTime(context, date)
+            timestamp > currentTime - 7 * DAY -> SimpleDateFormat("E", Locale.getDefault()).format(date)
+            timestamp > currentTime - YEAR -> SimpleDateFormat("MMM d", Locale.getDefault()).format(date)
+            else -> SimpleDateFormat("MMM d, yyyy", Locale.getDefault()).format(date)
+        }
+
+        return formatted ?: ""
+    }
+
+    fun formatTime(context: Context, date: Date): String {
+        return if (android.text.format.DateFormat.is24HourFormat(context)) {
+            android.text.format.DateFormat.format("HH:mm", date).toString()
+        } else {
+            android.text.format.DateFormat.format("h:mm a", date).toString()
+        }
+    }
+
+    fun isNight(cal: Calendar): Boolean {
+        val hour = cal.get(Calendar.HOUR_OF_DAY)
+        return hour <= 5 || hour >= 20
+    }
+
+    /**
+     * How many seconds until the given hour, tomorrow.
+     *
+     * @param hour 24 hour format
+     * @return seconds until that hour
+     */
+    fun millisUntilHourInTheNextDay(hour: Int): Long {
+        return millisUntilHourInTheNextDay(hour, Calendar.getInstance().timeInMillis)
+    }
+
+    fun millisUntilHourInTheNextDay(hour: Int, currentTime: Long): Long {
+        val calendar = Calendar.getInstance()
+        calendar.time = Date(currentTime)
+
+        // force the calendar to 3 in the morning, on the next day.
+        calendar.add(Calendar.DAY_OF_YEAR, 1)
+        calendar.set(Calendar.HOUR_OF_DAY, hour)
+        calendar.set(Calendar.MINUTE, 0)
+        calendar.set(Calendar.SECOND, 0)
+
+        val lookingFor = calendar.timeInMillis
+
+        return lookingFor - currentTime
+    }
+}
Index: app/src/main/java/com/soufianekre/redpass/MyApp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass\r\n\r\nimport android.app.Application\r\nimport android.content.Context\r\n\r\n\r\nclass MyApp: Application(){\r\n\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n        instance = this\r\n    }\r\n\r\n\r\n    companion object{\r\n        private var instance: MyApp? = null\r\n\r\n\r\n        fun getContext() : Context {\r\n            return instance!!.applicationContext\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/MyApp.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/MyApp.kt	(date 1605284028374)
@@ -12,7 +12,6 @@
         instance = this
     }
 
-
     companion object{
         private var instance: MyApp? = null
 
Index: app/src/main/java/com/soufianekre/redpass/helpers/KeyBoardUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.helpers\r\n\r\nimport android.content.Context.INPUT_METHOD_SERVICE\r\nimport android.widget.EditText\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.text.InputType\r\nimport android.view.View\r\nimport android.view.inputmethod.InputMethodManager\r\n\r\n\r\nobject KeyboardUtils {\r\n\r\n    fun hideSoftInput(activity: Activity) {\r\n        var view = activity.currentFocus\r\n        if (view == null) view = View(activity)\r\n        val imm = activity\r\n            .getSystemService(Activity.INPUT_METHOD_SERVICE) as InputMethodManager\r\n        imm.hideSoftInputFromWindow(view.windowToken, 0)\r\n    }\r\n\r\n    fun showSoftInput(context: Context, edit: EditText) {\r\n        if (edit.requestFocus()) {\r\n            edit.isFocusable = true\r\n            edit.isFocusableInTouchMode = true\r\n            edit.requestFocus()\r\n            val imm = context\r\n                .getSystemService(INPUT_METHOD_SERVICE) as InputMethodManager\r\n            imm.showSoftInput(edit, 0)\r\n        }\r\n\r\n    }\r\n\r\n    fun switchToNumeric(context: Context, edit: EditText) {\r\n        if (edit.requestFocus()) {\r\n            edit.isFocusable = true\r\n            edit.isFocusableInTouchMode = true\r\n            if (edit.inputType == InputType.TYPE_TEXT_VARIATION_PASSWORD)\r\n                edit.inputType = InputType.TYPE_NUMBER_VARIATION_PASSWORD\r\n            else\r\n                edit.inputType = InputType.TYPE_TEXT_VARIATION_PASSWORD\r\n            edit.requestFocus()\r\n            val imm = context\r\n                .getSystemService(INPUT_METHOD_SERVICE) as InputMethodManager\r\n            imm.showSoftInput(edit, 0)\r\n        }\r\n\r\n    }\r\n\r\n    fun toggleSoftInput(context: Context) {\r\n        val imm = context\r\n            .getSystemService(INPUT_METHOD_SERVICE) as InputMethodManager\r\n        imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0)\r\n    }\r\n\r\n}// This utility class is not publicly instantiable\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/helpers/KeyBoardUtils.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/helpers/KeyBoardUtils.kt	(date 1600800568133)
@@ -36,7 +36,7 @@
             edit.isFocusable = true
             edit.isFocusableInTouchMode = true
             if (edit.inputType == InputType.TYPE_TEXT_VARIATION_PASSWORD)
-                edit.inputType = InputType.TYPE_NUMBER_VARIATION_PASSWORD
+                edit.inputType = InputType.TYPE_CLASS_NUMBER
             else
                 edit.inputType = InputType.TYPE_TEXT_VARIATION_PASSWORD
             edit.requestFocus()
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.settings\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.preference.Preference\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.app_pref.PrefConst.PREF_ABOUT\r\nimport com.soufianekre.redpass.data.app_pref.PrefConst.PREF_SECURITY\r\nimport com.soufianekre.redpass.ui.about.AboutActivity\r\nimport com.soufianekre.redpass.ui.base.BasePreferenceFragment\r\nimport com.soufianekre.redpass.ui.settings.security.SecurityPref\r\n\r\nclass SettingsFragment : BasePreferenceFragment() , Preference.OnPreferenceClickListener{\r\n\r\n    lateinit var securityPref: SecurityPref\r\n    companion object{\r\n        fun newInstance(): SettingsFragment {\r\n            val args = Bundle()\r\n\r\n            val fragment = SettingsFragment()\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n    }\r\n\r\n    override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?) {\r\n        setPreferencesFromResource(R.xml.settings_layout,\"settings_layout\")\r\n        val securityPref = findPreference<Preference>(PREF_SECURITY)\r\n        securityPref!!.onPreferenceClickListener = this\r\n    }\r\n\r\n\r\n    private fun getSettingsActivity() : SettingsActivity{\r\n        return activity as SettingsActivity;\r\n    }\r\n\r\n    override fun onPreferenceClick(preference: Preference?): Boolean {\r\n        when(preference!!.key){\r\n            PREF_SECURITY -> getSettingsActivity().loadPrefFragment(SecurityPref.newInstance())\r\n            PREF_ABOUT -> getSettingsActivity().startActivity(Intent(activity,AboutActivity::class.java))\r\n        }\r\n        return true\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsFragment.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsFragment.kt	(date 1605283915057)
@@ -6,13 +6,12 @@
 import com.soufianekre.redpass.R
 import com.soufianekre.redpass.data.app_pref.PrefConst.PREF_ABOUT
 import com.soufianekre.redpass.data.app_pref.PrefConst.PREF_SECURITY
-import com.soufianekre.redpass.ui.about.AboutActivity
+import com.soufianekre.redpass.ui.settings.about.AboutActivity
 import com.soufianekre.redpass.ui.base.BasePreferenceFragment
-import com.soufianekre.redpass.ui.settings.security.SecurityPref
+import com.soufianekre.redpass.ui.settings.security.SecurityPrefActivity
 
 class SettingsFragment : BasePreferenceFragment() , Preference.OnPreferenceClickListener{
 
-    lateinit var securityPref: SecurityPref
     companion object{
         fun newInstance(): SettingsFragment {
             val args = Bundle()
@@ -29,15 +28,17 @@
         securityPref!!.onPreferenceClickListener = this
     }
 
-
-    private fun getSettingsActivity() : SettingsActivity{
-        return activity as SettingsActivity;
-    }
-
     override fun onPreferenceClick(preference: Preference?): Boolean {
         when(preference!!.key){
-            PREF_SECURITY -> getSettingsActivity().loadPrefFragment(SecurityPref.newInstance())
-            PREF_ABOUT -> getSettingsActivity().startActivity(Intent(activity,AboutActivity::class.java))
+            PREF_SECURITY -> {
+                val intent = Intent(requireActivity(),SecurityPrefActivity::class.java)
+                startActivity(intent)
+            }
+            PREF_ABOUT -> {
+                val intent = Intent(requireActivity(),
+                    AboutActivity::class.java)
+                startActivity(intent)
+            }
         }
         return true
     }
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.settings\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.appcompat.widget.Toolbar\r\nimport androidx.fragment.app.Fragment\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.ui.base.BaseActivity\r\nimport com.soufianekre.redpass.ui.settings.security.SecurityPref\r\n\r\nclass SettingsActivity : BaseActivity(),SettingsMvp.View{\r\n\r\n    @BindView(R.id.settings_toolbar)\r\n    lateinit var settingsToolbar : Toolbar\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_settings)\r\n        ButterKnife.bind(this)\r\n        setupUI()\r\n        loadPrefFragment(SettingsFragment.newInstance())\r\n    }\r\n\r\n    private fun setupUI() {\r\n        setSupportActionBar(settingsToolbar)\r\n        supportActionBar!!.setDisplayHomeAsUpEnabled(true)\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n    }\r\n\r\n    override fun onStop() {\r\n        super.onStop()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        if (getCurrentFragment() is SecurityPref){\r\n            showMessage(\"Security Pref\")\r\n            supportFragmentManager.popBackStack();\r\n        }else{\r\n            finish()\r\n        }\r\n\r\n    }\r\n\r\n    fun loadPrefFragment(fragment : Fragment){\r\n        supportFragmentManager\r\n            .beginTransaction().replace(R.id.settings_container,fragment)\r\n            .addToBackStack(null)\r\n            .commit()\r\n    }\r\n\r\n\r\n    private fun getCurrentFragment() : Fragment? {\r\n        return supportFragmentManager.findFragmentById(R.id.settings_container);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsActivity.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/SettingsActivity.kt	(date 1605283834249)
@@ -1,6 +1,5 @@
 package com.soufianekre.redpass.ui.settings
 
-import android.content.Intent
 import android.os.Bundle
 import androidx.appcompat.widget.Toolbar
 import androidx.fragment.app.Fragment
@@ -8,9 +7,9 @@
 import butterknife.ButterKnife
 import com.soufianekre.redpass.R
 import com.soufianekre.redpass.ui.base.BaseActivity
-import com.soufianekre.redpass.ui.settings.security.SecurityPref
+import com.soufianekre.redpass.ui.settings.security.SecurityPrefFragment
 
-class SettingsActivity : BaseActivity(),SettingsMvp.View{
+class SettingsActivity : BaseActivity(){
 
     @BindView(R.id.settings_toolbar)
     lateinit var settingsToolbar : Toolbar
@@ -25,6 +24,7 @@
 
     private fun setupUI() {
         setSupportActionBar(settingsToolbar)
+        settingsToolbar.title = "Settings"
         supportActionBar!!.setDisplayHomeAsUpEnabled(true)
     }
 
@@ -41,16 +41,10 @@
     }
 
     override fun onBackPressed() {
-        if (getCurrentFragment() is SecurityPref){
-            showMessage("Security Pref")
-            supportFragmentManager.popBackStack();
-        }else{
-            finish()
-        }
-
+        super.onBackPressed()
     }
 
-    fun loadPrefFragment(fragment : Fragment){
+    private fun loadPrefFragment(fragment : Fragment){
         supportFragmentManager
             .beginTransaction().replace(R.id.settings_container,fragment)
             .addToBackStack(null)
Index: app/src/main/java/com/soufianekre/redpass/helpers/BiometricUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/helpers/BiometricUtils.kt	(date 1602434504287)
+++ app/src/main/java/com/soufianekre/redpass/helpers/BiometricUtils.kt	(date 1602434504287)
@@ -0,0 +1,61 @@
+package com.soufianekre.redpass.helpers
+
+import android.Manifest
+import android.content.Context
+import android.content.pm.PackageManager
+import android.os.Build
+import androidx.annotation.RequiresApi
+import androidx.core.app.ActivityCompat
+import androidx.core.hardware.fingerprint.FingerprintManagerCompat
+
+
+object BiometricUtils {
+    val isBiometricPromptEnabled: Boolean
+        get() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.P
+
+    /*
+     * Condition I: Check if the android version in device is greater than
+     * Marshmallow, since fingerprint authentication is only supported
+     * from Android 6.0.
+     * Note: If your project's minSdkversion is 23 or higher,
+     * then you won't need to perform this check.
+     *
+     * */
+    val isSdkVersionSupported: Boolean
+        get() = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
+
+    /*
+     * Condition II: Check if the device has fingerprint sensors.
+     * Note: If you marked android.hardware.fingerprint as something that
+     * your app requires (android:required="true"), then you don't need
+     * to perform this check.
+     *
+     * */
+    fun isHardwareSupported(context: Context?): Boolean {
+        val fingerprintManager = FingerprintManagerCompat.from(context!!)
+        return fingerprintManager.isHardwareDetected
+    }
+
+    /*
+     * Condition III: Fingerprint authentication can be matched with a
+     * registered fingerprint of the user. So we need to perform this check
+     * in order to enable fingerprint authentication
+     *
+     * */
+    fun isFingerprintAvailable(context: Context?): Boolean {
+        val fingerprintManager = FingerprintManagerCompat.from(context!!)
+        return fingerprintManager.hasEnrolledFingerprints()
+    }
+
+    /*
+     * Condition IV: Check if the permission has been added to
+     * the app. This permission will be granted as soon as the user
+     * installs the app on their device.
+     *
+     * */
+    @RequiresApi(Build.VERSION_CODES.M)
+    fun isPermissionGranted(context: Context?): Boolean {
+        return ActivityCompat.checkSelfPermission(context!!, Manifest.permission.USE_FINGERPRINT) ==
+                PackageManager.PERMISSION_GRANTED
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/helpers/DateHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.helpers\r\n\r\nimport android.content.Context\r\n\r\nobject DateHelper {\r\n\r\n    fun format(context : Context,date :Long ,format :String ):String{\r\n\r\n        return \"\"\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/helpers/DateHelper.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/helpers/DateHelper.kt	(date 1605282837574)
@@ -1,12 +1,12 @@
 package com.soufianekre.redpass.helpers
 
-import android.content.Context
+import java.text.SimpleDateFormat
 
 object DateHelper {
 
-    fun format(context : Context,date :Long ,format :String ):String{
-
-        return ""
+    fun format(date: Long, format: String):String{
+        val simpleDateFormat = SimpleDateFormat(format)
+        return simpleDateFormat.format(date).toString()
 
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/database/DatabasePrefActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/database/DatabasePrefActivity.kt	(date 1606152217310)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/database/DatabasePrefActivity.kt	(date 1606152217310)
@@ -0,0 +1,53 @@
+package com.soufianekre.redpass.ui.settings.database
+
+import android.os.Bundle
+import androidx.appcompat.widget.Toolbar
+import androidx.fragment.app.Fragment
+import butterknife.BindView
+import butterknife.ButterKnife
+import com.soufianekre.redpass.R
+import com.soufianekre.redpass.ui.base.BaseActivity
+import com.soufianekre.redpass.ui.settings.security.SecurityPrefFragment
+
+class DatabasePrefActivity : BaseActivity() {
+
+    @BindView(R.id.settings_toolbar)
+    lateinit var databasePrefToolbar : Toolbar
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_settings)
+        ButterKnife.bind(this)
+        setupUI()
+        loadPrefFragment(SecurityPrefFragment.newInstance())
+    }
+
+    private fun setupUI() {
+        databasePrefToolbar.title = "DataBase"
+        setSupportActionBar(databasePrefToolbar)
+        supportActionBar!!.setDisplayHomeAsUpEnabled(true)
+    }
+
+    override fun onResume() {
+        super.onResume()
+    }
+
+    override fun onStop() {
+        super.onStop()
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+    }
+
+    override fun onBackPressed() {
+        finish();
+    }
+
+    fun loadPrefFragment(fragment : Fragment){
+        supportFragmentManager
+            .beginTransaction().replace(R.id.settings_container,fragment)
+            .addToBackStack(null)
+            .commit()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/database/DatabasePrefFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/database/DatabasePrefFragment.kt	(date 1605283802563)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/database/DatabasePrefFragment.kt	(date 1605283802563)
@@ -0,0 +1,26 @@
+package com.soufianekre.redpass.ui.settings.database
+
+import android.os.Bundle
+import com.soufianekre.redpass.R
+import com.soufianekre.redpass.ui.base.BasePreferenceFragment
+import com.soufianekre.redpass.ui.settings.SettingsActivity
+import com.soufianekre.redpass.ui.settings.SettingsFragment
+import com.soufianekre.redpass.ui.settings.security.SecurityPrefFragment
+
+class DatabasePrefFragment : BasePreferenceFragment(){
+
+
+    companion object{
+        fun newInstance(): SecurityPrefFragment {
+            val args = Bundle()
+
+            val fragment = SecurityPrefFragment()
+            fragment.arguments = args
+            return fragment
+        }
+    }
+    override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?) {
+        setPreferencesFromResource(R.xml.settings_database_layout,"database_layout")
+    }
+
+}
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"delegatedBuild\" value=\"false\" />\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ .idea/gradle.xml	(date 1606317099278)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ .idea/misc.xml	(date 1606317342349)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/security/SecurityPref.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.settings.security\r\n\r\nimport android.os.Bundle\r\nimport androidx.preference.PreferenceFragmentCompat\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.ui.settings.SettingsActivity\r\nimport com.soufianekre.redpass.ui.settings.SettingsFragment\r\n\r\nclass SecurityPref : PreferenceFragmentCompat() {\r\n\r\n    companion object{\r\n        fun newInstance(): SecurityPref {\r\n            val args = Bundle()\r\n\r\n            val fragment = SecurityPref()\r\n            fragment.arguments = args\r\n            return fragment\r\n        }\r\n    }\r\n    override fun onCreatePreferences(savedInstanceState: Bundle?, rootKey: String?) {\r\n        setPreferencesFromResource(R.xml.settings_security_layout,\"security_layout\")\r\n    }\r\n\r\n\r\n    public fun onBackPressed(){\r\n        getSettingsActivity().loadPrefFragment(SettingsFragment.newInstance())\r\n    }\r\n\r\n\r\n    private fun getSettingsActivity() : SettingsActivity {\r\n        return activity as SettingsActivity;\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/security/SecurityPref.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/security/SecurityPrefFragment.kt	(date 1606155824959)
@@ -1,18 +1,22 @@
 package com.soufianekre.redpass.ui.settings.security
 
+import android.content.Intent
 import android.os.Bundle
+import androidx.preference.Preference
 import androidx.preference.PreferenceFragmentCompat
 import com.soufianekre.redpass.R
-import com.soufianekre.redpass.ui.settings.SettingsActivity
-import com.soufianekre.redpass.ui.settings.SettingsFragment
+import com.soufianekre.redpass.data.app_pref.PrefConst.PREF_SECURITY_CHANGE_APP_PASSWORD
+import com.soufianekre.redpass.data.app_pref.PrefConst.PREF_SECURITY_FINGER_PRINT
+import com.soufianekre.redpass.ui.FingerprintActivity
+import com.soufianekre.redpass.ui.settings.change_password.ChangePasswordActivity
 
-class SecurityPref : PreferenceFragmentCompat() {
+class SecurityPrefFragment : PreferenceFragmentCompat(),Preference.OnPreferenceClickListener {
 
     companion object{
-        fun newInstance(): SecurityPref {
+        fun newInstance(): SecurityPrefFragment {
             val args = Bundle()
 
-            val fragment = SecurityPref()
+            val fragment = SecurityPrefFragment()
             fragment.arguments = args
             return fragment
         }
@@ -21,13 +25,21 @@
         setPreferencesFromResource(R.xml.settings_security_layout,"security_layout")
     }
 
-
-    public fun onBackPressed(){
-        getSettingsActivity().loadPrefFragment(SettingsFragment.newInstance())
+    override fun onPreferenceClick(preference: Preference?): Boolean {
+        when(preference!!.key){
+            PREF_SECURITY_FINGER_PRINT ->{
+                val intent = Intent(activity,FingerprintActivity::class.java);
+                requireActivity().startActivity(intent)
+                return true
+            }
+            PREF_SECURITY_CHANGE_APP_PASSWORD ->{
+                val intent = Intent(activity, ChangePasswordActivity::class.java);
+                requireActivity().startActivity(intent)
+                return true
+            }
+        }
+        return false
     }
 
 
-    private fun getSettingsActivity() : SettingsActivity {
-        return activity as SettingsActivity;
-    }
 }
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/security/SecurityPrefActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/security/SecurityPrefActivity.kt	(date 1606152087915)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/security/SecurityPrefActivity.kt	(date 1606152087915)
@@ -0,0 +1,54 @@
+package com.soufianekre.redpass.ui.settings.security
+
+import android.os.Bundle
+import androidx.appcompat.widget.Toolbar
+import androidx.fragment.app.Fragment
+import butterknife.BindView
+import butterknife.ButterKnife
+import com.soufianekre.redpass.R
+import com.soufianekre.redpass.ui.base.BaseActivity
+import com.soufianekre.redpass.ui.settings.SettingsFragment
+
+class SecurityPrefActivity : BaseActivity(){
+    @BindView(R.id.settings_toolbar)
+    lateinit var securityPrefToolbar : Toolbar
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_settings)
+        ButterKnife.bind(this)
+        setupUI()
+        loadPrefFragment(SecurityPrefFragment.newInstance())
+    }
+
+    private fun setupUI() {
+        securityPrefToolbar.title = "Security"
+        setSupportActionBar(securityPrefToolbar)
+        supportActionBar!!.setDisplayHomeAsUpEnabled(true)
+    }
+
+    override fun onResume() {
+        super.onResume()
+    }
+
+    override fun onStop() {
+        super.onStop()
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+    }
+
+    override fun onBackPressed() {
+        finish()
+    }
+
+    fun loadPrefFragment(fragment : Fragment){
+        supportFragmentManager
+            .beginTransaction().replace(R.id.settings_container,fragment)
+            .addToBackStack(null)
+            .commit()
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/settings/change_password/ChangePasswordActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/settings/change_password/ChangePasswordActivity.kt	(date 1606155122968)
+++ app/src/main/java/com/soufianekre/redpass/ui/settings/change_password/ChangePasswordActivity.kt	(date 1606155122968)
@@ -0,0 +1,7 @@
+package com.soufianekre.redpass.ui.settings.change_password
+
+import com.soufianekre.redpass.ui.base.BaseActivity
+
+class ChangePasswordActivity : BaseActivity(){
+
+}
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/FingerprintActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/FingerprintActivity.kt	(date 1606150521278)
+++ app/src/main/java/com/soufianekre/redpass/ui/FingerprintActivity.kt	(date 1606150521278)
@@ -0,0 +1,62 @@
+package com.soufianekre.redpass.ui
+
+import android.content.Intent
+import android.os.Bundle
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.biometric.BiometricPrompt
+import com.soufianekre.redpass.ui.main.MainActivity
+import java.util.concurrent.Executors
+
+class FingerprintActivity : AppCompatActivity(){
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        val activity = this
+
+        val executor = Executors.newSingleThreadExecutor()
+
+        val biometricPrompt = BiometricPrompt(activity, executor, object : BiometricPrompt.AuthenticationCallback() {
+
+            override fun onAuthenticationError(errorCode: Int, errString: CharSequence) {
+                super.onAuthenticationError(errorCode, errString)
+                if (errorCode == BiometricPrompt.ERROR_NEGATIVE_BUTTON) {
+                    // user clicked negative/cancel button
+                } else {
+
+                }
+            }
+
+            override fun onAuthenticationSucceeded(result: BiometricPrompt.AuthenticationResult) {
+                super.onAuthenticationSucceeded(result)
+                runOnUiThread{
+                    startActivity(Intent(activity, MainActivity::class.java))
+                }
+            }
+
+            override fun onAuthenticationFailed() {
+                super.onAuthenticationFailed()
+                runOnUiThread{
+                    Toast.makeText(activity,"Authentication failed! Please try again.", Toast.LENGTH_SHORT).show()
+                }
+            }
+        })
+
+        val promptInfo = BiometricPrompt.PromptInfo.Builder()
+            .setTitle("Authentication prompt!")
+            /*Subtitle and description are optional parameters, so, you can skip those parameters.
+            .setSubtitle("Set the subtitle to display.")
+            .setDescription("Verification required")*/
+            .setNegativeButtonText("Cancel")
+            .build()
+
+        // show the authentication
+        biometricPrompt.authenticate(promptInfo)
+
+        // cancel authentication
+        biometricPrompt.cancelAuthentication()
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/main/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.main\r\n\r\n\r\nimport android.app.SearchManager\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.Menu\r\nimport android.view.MenuItem\r\nimport android.widget.SearchView\r\nimport androidx.appcompat.app.ActionBarDrawerToggle\r\nimport androidx.appcompat.widget.Toolbar\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.fragment.app.Fragment\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.BaseActivity\r\nimport com.soufianekre.redpass.ui.main.drawer.AppNavigationDrawerFragment\r\nimport com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity\r\nimport com.soufianekre.redpass.ui.passwords.PasswordListFragment\r\nimport com.soufianekre.redpass.ui.settings.SettingsActivity\r\n\r\n\r\nclass MainActivity :BaseActivity() ,MainMvp.View{\r\n\r\n\r\n    private val FRAGMENT_DRAWER_TAG: String = \"fragment_drawer_tag\"\r\n\r\n\r\n    @BindView(R.id.main_toolbar)\r\n    lateinit var mainToolbar : Toolbar\r\n\r\n    @BindView(R.id.password_add_fab)\r\n    lateinit var passwordAddFab: FloatingActionButton\r\n\r\n    @BindView(R.id.main_drawer)\r\n    lateinit var mainDrawer : DrawerLayout\r\n\r\n    private var searchView :SearchView? = null\r\n\r\n\r\n    lateinit var mPresenter :MainPresenter<MainMvp.View>\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n        mPresenter = MainPresenter()\r\n        ButterKnife.bind(this)\r\n        mPresenter.onAttach(this)\r\n        setupUi()\r\n        loadPasswordListFragment(null)\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        mPresenter.onDetach()\r\n    }\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n    }\r\n    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\r\n        menuInflater.inflate(R.menu.menu_main,menu)\r\n        val searchManager : SearchManager = getSystemService(Context.SEARCH_SERVICE) as SearchManager\r\n        searchView = menu!!.findItem(R.id.menu_main_search).actionView as SearchView\r\n        searchView?.setSearchableInfo(searchManager.getSearchableInfo(componentName))\r\n        searchView?.maxWidth = Integer.MAX_VALUE;\r\n        return true\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n\r\n        when(item.itemId){\r\n            R.id.menu_main_settings -> {\r\n                val intent = Intent(this,SettingsActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n        return super.onOptionsItemSelected(item)\r\n    }\r\n\r\n\r\n    override fun loadFragment(fragment: Fragment){\r\n        supportFragmentManager.beginTransaction()\r\n            .setCustomAnimations(\r\n                R.anim.anim_in,\r\n                R.anim.anim_out,\r\n                R.anim.anim_in_pop,\r\n                R.anim.anim_out_pop)\r\n            .replace(R.id.fragment_container,fragment)\r\n            .commit()\r\n    }\r\n\r\n    override fun openPasswordEditorActivity(){\r\n        val passwordEditorIntent  = Intent(this@MainActivity,PasswordEditorActivity::class.java)\r\n        startActivity( passwordEditorIntent)\r\n    }\r\n\r\n\r\n\r\n    fun setupUi(){\r\n        mainToolbar.setOnClickListener{\r\n            onBackPressed()\r\n        }\r\n        // drawer\r\n        val toggle = ActionBarDrawerToggle(this,mainDrawer,mainToolbar\r\n            , R.string.navigation_drawer_open,\r\n            R.string.navigation_drawer_close)\r\n        mainDrawer.addDrawerListener(toggle)\r\n        toggle.syncState()\r\n\r\n        setSupportActionBar(mainToolbar)\r\n\r\n        val mNavigationDrawerFragment = supportFragmentManager.findFragmentById(R.id.main_nav_view)\r\n                as AppNavigationDrawerFragment?\r\n        if (mNavigationDrawerFragment == null) {\r\n            val fragmentTransaction = supportFragmentManager.beginTransaction()\r\n            fragmentTransaction.replace(\r\n                R.id.main_nav_view, AppNavigationDrawerFragment.newInstance(),\r\n                FRAGMENT_DRAWER_TAG\r\n            ).commit()\r\n        }\r\n\r\n        passwordAddFab.setOnClickListener{\r\n            openPasswordEditorActivity()\r\n        }\r\n    }\r\n\r\n\r\n    private fun loadPasswordListFragment(label : Label?){\r\n        loadFragment(PasswordListFragment.newInstance(label))\r\n    }\r\n\r\n    fun getDrawerLayout():DrawerLayout{\r\n        return mainDrawer\r\n    }\r\n    fun getToolbar(): Toolbar{\r\n        return mainToolbar\r\n    }\r\n    fun getFab():FloatingActionButton{\r\n        return passwordAddFab\r\n    }\r\n\r\n    fun getSearchView() : SearchView?{\r\n        return searchView\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/main/MainActivity.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/main/MainActivity.kt	(date 1606161863017)
@@ -18,7 +18,7 @@
 import com.soufianekre.redpass.R
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.ui.base.BaseActivity
-import com.soufianekre.redpass.ui.main.drawer.AppNavigationDrawerFragment
+import com.soufianekre.redpass.ui.main.drawer.NavDrawerFragment
 import com.soufianekre.redpass.ui.password_editor.PasswordEditorActivity
 import com.soufianekre.redpass.ui.passwords.PasswordListFragment
 import com.soufianekre.redpass.ui.settings.SettingsActivity
@@ -30,7 +30,7 @@
     private val FRAGMENT_DRAWER_TAG: String = "fragment_drawer_tag"
 
 
-    @BindView(R.id.main_toolbar)
+    @BindView(R.id.app_toolbar)
     lateinit var mainToolbar : Toolbar
 
     @BindView(R.id.password_add_fab)
@@ -61,6 +61,7 @@
     override fun onDestroy() {
         super.onDestroy()
     }
+
     override fun onCreateOptionsMenu(menu: Menu?): Boolean {
         menuInflater.inflate(R.menu.menu_main,menu)
         val searchManager : SearchManager = getSystemService(Context.SEARCH_SERVICE) as SearchManager
@@ -84,11 +85,11 @@
 
     override fun loadFragment(fragment: Fragment){
         supportFragmentManager.beginTransaction()
-            .setCustomAnimations(
+            /*.setCustomAnimations(
                 R.anim.anim_in,
                 R.anim.anim_out,
                 R.anim.anim_in_pop,
-                R.anim.anim_out_pop)
+                R.anim.anim_out_pop)*/
             .replace(R.id.fragment_container,fragment)
             .commit()
     }
@@ -114,11 +115,11 @@
         setSupportActionBar(mainToolbar)
 
         val mNavigationDrawerFragment = supportFragmentManager.findFragmentById(R.id.main_nav_view)
-                as AppNavigationDrawerFragment?
+                as NavDrawerFragment?
         if (mNavigationDrawerFragment == null) {
             val fragmentTransaction = supportFragmentManager.beginTransaction()
             fragmentTransaction.replace(
-                R.id.main_nav_view, AppNavigationDrawerFragment.newInstance(),
+                R.id.main_nav_view, NavDrawerFragment.newInstance(),
                 FRAGMENT_DRAWER_TAG
             ).commit()
         }
@@ -148,5 +149,11 @@
     }
 
 
-
+    override fun onBackPressed() {
+        if (searchView!!.isIconified){
+            searchView!!.isIconified = false;
+        }else{
+            super.onBackPressed()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/drawer_item_label.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"60dp\"\r\n    style=\"@style/style_drawer_item_layout\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/drawer_item_label_icon\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_alignParentStart=\"true\"\r\n        style=\"@style/style_drawer_img\"\r\n        android:src=\"@drawable/ic_label_outline_24dp\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/drawer_item_label_text\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerVertical=\"true\"\r\n        android:layout_toEndOf=\"@id/drawer_item_label_icon\"\r\n        style=\"@style/style_drawer_text\"\r\n        android:text=\"Label\"\r\n        />\r\n\r\n\r\n</RelativeLayout>
===================================================================
--- app/src/main/res/layout/drawer_item_label.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/item_drawer_label.xml	(date 1606162829294)
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="60dp"
-    style="@style/style_drawer_item_layout">
+    android:layout_height="50dp"
+    style="@style/style_drawer_item_layout"
+    android:background="?selectableItemBackground">
 
     <ImageView
         android:id="@+id/drawer_item_label_icon"
Index: app/src/main/java/com/soufianekre/redpass/ui/main/drawer/adapters/DrawerLabelsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.main.drawer.adapters\r\n\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.helpers.AppHelper\r\nimport kotlinx.android.synthetic.main.drawer_item_label.view.*\r\n\r\nclass DrawerLabelsAdapter (private var mContext : Context,\r\n                           private var labels : ArrayList<Label>,\r\n                           var listener: DrawerLabelsAdapterListener?)\r\n    : RecyclerView.Adapter<DrawerLabelsAdapter.DrawerLabelViewHolder>() {\r\n\r\n    var selectedItemPosition : Int = -1\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): DrawerLabelViewHolder {\r\n        val view = LayoutInflater.from(mContext)\r\n            .inflate(R.layout.drawer_item_label, parent, false)\r\n\r\n        return DrawerLabelViewHolder(view)\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return labels.size\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: DrawerLabelViewHolder, position: Int) {\r\n        val label = labels[position]\r\n        holder.labelText.text = label.name\r\n        holder.labelIcon.setColorFilter(AppHelper.getRandomMaterialColor(mContext, 400))\r\n        if (selectedItemPosition == position){\r\n            holder.itemView.setBackgroundResource(R.color.colorPrimary)\r\n            holder.labelText.setTextColor(ContextCompat.getColor(mContext, R.color.white))\r\n        }else{\r\n            holder.itemView.setBackgroundResource(R.color.white)\r\n            holder.labelText.setTextColor(ContextCompat.getColor(mContext, R.color.holo_dark_action_mode))\r\n        }\r\n\r\n        setListeners(holder, position)\r\n    }\r\n\r\n    private fun setListeners(holder: DrawerLabelViewHolder, position: Int) {\r\n        holder.itemView.setOnClickListener {\r\n            selectedItemPosition = position\r\n            listener?.onLabelClicked(labels[position])\r\n            notifyDataSetChanged()\r\n        }\r\n        holder.itemView.setOnLongClickListener {\r\n            if (listener == null)\r\n                return@setOnLongClickListener false\r\n            else\r\n                listener!!.onLabelLongClicked(labels[position])\r\n\r\n        }\r\n\r\n    }\r\n\r\n    fun addAll(labelList: List<Label>) {\r\n        labels.clear()\r\n        labels.addAll(labelList)\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    fun remove(label: Label) {\r\n        for (i in 0..labels.size) {\r\n            if (labels[i] == label)\r\n                labels.remove(label)\r\n            notifyItemRemoved(i)\r\n        }\r\n\r\n    }\r\n\r\n    fun add(label: Label) {\r\n        labels.add(label)\r\n        notifyItemInserted(labels.size - 1)\r\n    }\r\n\r\n\r\n    inner class DrawerLabelViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        var labelText: TextView = itemView.drawer_item_label_text\r\n        var labelIcon: ImageView = itemView.drawer_item_label_icon\r\n    }\r\n\r\n    interface DrawerLabelsAdapterListener {\r\n        fun onLabelClicked(label:Label)\r\n        fun onLabelLongClicked(label :Label): Boolean\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/main/drawer/adapters/DrawerLabelsAdapter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/main/drawer/NavDrawerLabelsAdapter.kt	(date 1606163139805)
@@ -1,4 +1,4 @@
-package com.soufianekre.redpass.ui.main.drawer.adapters
+package com.soufianekre.redpass.ui.main.drawer
 
 import android.content.Context
 import android.view.LayoutInflater
@@ -10,19 +10,18 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.soufianekre.redpass.R
 import com.soufianekre.redpass.data.db.models.Label
-import com.soufianekre.redpass.helpers.AppHelper
-import kotlinx.android.synthetic.main.drawer_item_label.view.*
+import kotlinx.android.synthetic.main.item_drawer_label.view.*
 
-class DrawerLabelsAdapter (private var mContext : Context,
-                           private var labels : ArrayList<Label>,
-                           var listener: DrawerLabelsAdapterListener?)
-    : RecyclerView.Adapter<DrawerLabelsAdapter.DrawerLabelViewHolder>() {
+class NavDrawerLabelsAdapter (private var mContext : Context,
+                              private var labels : ArrayList<Label>,
+                              var listener: DrawerLabelsAdapterListener?)
+    : RecyclerView.Adapter<NavDrawerLabelsAdapter.DrawerLabelViewHolder>() {
 
     var selectedItemPosition : Int = -1
 
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): DrawerLabelViewHolder {
         val view = LayoutInflater.from(mContext)
-            .inflate(R.layout.drawer_item_label, parent, false)
+            .inflate(R.layout.item_drawer_label, parent, false)
 
         return DrawerLabelViewHolder(view)
     }
@@ -34,10 +33,10 @@
     override fun onBindViewHolder(holder: DrawerLabelViewHolder, position: Int) {
         val label = labels[position]
         holder.labelText.text = label.name
-        holder.labelIcon.setColorFilter(AppHelper.getRandomMaterialColor(mContext, 400))
         if (selectedItemPosition == position){
-            holder.itemView.setBackgroundResource(R.color.colorPrimary)
-            holder.labelText.setTextColor(ContextCompat.getColor(mContext, R.color.white))
+            holder.itemView.setBackgroundResource(R.color.drawer_selection_color)
+            holder.labelText.setTextColor(ContextCompat.getColor(mContext, R.color.colorPrimary))
+            holder.labelIcon.setColorFilter(ContextCompat.getColor(mContext, R.color.colorPrimary))
         }else{
             holder.itemView.setBackgroundResource(R.color.white)
             holder.labelText.setTextColor(ContextCompat.getColor(mContext, R.color.holo_dark_action_mode))
Index: app/src/main/java/com/soufianekre/redpass/ui/main/drawer/DrawerMvp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.main.drawer\r\n\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.mvp.BaseMvp\r\nimport com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter\r\n\r\nclass DrawerMvp{\r\n    interface View :BaseMvp.View{\r\n        fun buildLabelsMenu(labelList:List<Label>)\r\n        fun openLabelsActivity()\r\n        fun loadPasswordItemList(label:Label)\r\n        fun showPasswordListFragment()\r\n    }\r\n    interface Presenter<V : View>:BaseMvp.Presenter<V>,DrawerLabelsAdapter.DrawerLabelsAdapterListener{\r\n        fun getLabels()\r\n        fun onDrawerItemClicked(item : Int)\r\n\r\n\r\n    }\r\n}
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/main/drawer/DrawerMvp.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/main/drawer/NavDrawerMvp.kt	(date 1606162164718)
@@ -2,19 +2,16 @@
 
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.ui.base.mvp.BaseMvp
-import com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter
 
-class DrawerMvp{
-    interface View :BaseMvp.View{
+class NavDrawerMvp{
+    interface View :BaseMvp.View,NavDrawerLabelsAdapter.DrawerLabelsAdapterListener{
         fun buildLabelsMenu(labelList:List<Label>)
-        fun openLabelsActivity()
+        fun showLabelsActivity()
         fun loadPasswordItemList(label:Label)
         fun showPasswordListFragment()
+        fun showSettings()
     }
-    interface Presenter<V : View>:BaseMvp.Presenter<V>,DrawerLabelsAdapter.DrawerLabelsAdapterListener{
+    interface Presenter<V : View>:BaseMvp.Presenter<V>{
         fun getLabels()
-        fun onDrawerItemClicked(item : Int)
-
-
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/main/drawer/AppNavigationDrawerFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.main.drawer\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.appcompat.app.ActionBarDrawerToggle\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager.VERTICAL\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.R.string\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.BaseFragment\r\nimport com.soufianekre.redpass.ui.labels.LabelsActivity\r\nimport com.soufianekre.redpass.ui.main.MainActivity\r\nimport com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter\r\nimport com.soufianekre.redpass.ui.passwords.PasswordListFragment\r\nimport kotlinx.android.synthetic.main.nav_drawer_fragment.view.*\r\n\r\n\r\nclass AppNavigationDrawerFragment: BaseFragment(),DrawerMvp.View{\r\n\r\n\r\n    private val NAV_VIEW_FRAGMENT_TAG: String? = \"nav_view_fragment\"\r\n    private lateinit var drawer_view :View\r\n\r\n\r\n    @BindView(R.id.drawer_item_all)\r\n    lateinit var showAll : View\r\n    @BindView(R.id.drawer_item_settings)\r\n    lateinit var settings:View\r\n    @BindView(R.id.drawer_item_edit_labels)\r\n    lateinit var editLabels : View\r\n    @BindView(R.id.left_drawer)\r\n    lateinit var leftDrawer:View\r\n\r\n\r\n    @BindView(R.id.drawer_labels_list_view)\r\n    lateinit var drawerLabelsListView : RecyclerView\r\n\r\n    lateinit var drawerLabelAdapter : DrawerLabelsAdapter\r\n\r\n\r\n    var mDrawerToggle: ActionBarDrawerToggle? = null\r\n    var mDrawerLayout: DrawerLayout? = null\r\n    private var mActivity: MainActivity? = null\r\n    private val alreadyInitialized: Boolean = false\r\n\r\n    lateinit var mPresenter: DrawerPresenter<DrawerMvp.View>\r\n\r\n    companion object{\r\n        fun newInstance(): AppNavigationDrawerFragment{\r\n            val fragment = AppNavigationDrawerFragment()\r\n            val bundle = Bundle()\r\n            fragment.arguments = bundle\r\n            return fragment\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?): View? {\r\n\r\n        drawer_view= inflater.inflate(R.layout.nav_drawer_fragment,container,false)\r\n        mPresenter = DrawerPresenter()\r\n        mPresenter.onAttach(this)\r\n        ButterKnife.bind(this,drawer_view)\r\n        return drawer_view\r\n    }\r\n\r\n\r\n    override fun onActivityCreated(savedInstanceState: Bundle?) {\r\n        super.onActivityCreated(savedInstanceState)\r\n        mActivity = activity as MainActivity?\r\n        init()\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        refreshMenus()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        mPresenter.onDetach()\r\n    }\r\n\r\n\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        drawerLabelAdapter =\r\n            DrawerLabelsAdapter(\r\n                requireActivity(),\r\n                ArrayList(),\r\n                mPresenter\r\n            )\r\n        drawerLabelsListView.setHasFixedSize(true)\r\n\r\n        drawerLabelsListView.layoutManager = LinearLayoutManager(requireActivity(),VERTICAL,false)\r\n        drawerLabelsListView.adapter = drawerLabelAdapter\r\n\r\n\r\n        setListeners()\r\n    }\r\n\r\n    override fun loadPasswordItemList(label: Label) {\r\n        getMainActivity().loadFragment(PasswordListFragment.newInstance(label))\r\n        getMainActivity().getDrawerLayout().closeDrawer(GravityCompat.START)\r\n\r\n    }\r\n\r\n    override fun buildLabelsMenu(labelList : List<Label>) {\r\n        drawerLabelAdapter.addAll(labelList)\r\n        mDrawerToggle!!.syncState()\r\n    }\r\n\r\n    override fun openLabelsActivity(){\r\n        val intent = Intent(requireContext(),LabelsActivity::class.java)\r\n        startActivity(intent)\r\n        getMainActivity().getDrawerLayout().closeDrawer(GravityCompat.START)\r\n\r\n    }\r\n\r\n    override fun showPasswordListFragment() {\r\n        drawerLabelAdapter.selectedItemPosition = -1\r\n        drawerLabelAdapter.notifyDataSetChanged()\r\n        getMainActivity().loadFragment(PasswordListFragment.newInstance(null))\r\n        getMainActivity().getDrawerLayout().closeDrawer(GravityCompat.START)\r\n\r\n    }\r\n\r\n\r\n\r\n    private fun init(){\r\n        mDrawerLayout = getMainActivity().getDrawerLayout()\r\n        mDrawerLayout!!.isFocusableInTouchMode = false\r\n\r\n        leftDrawer.setPadding(\r\n            leftDrawer.paddingLeft, leftDrawer.paddingTop, leftDrawer.paddingRight,\r\n            10\r\n        )\r\n\r\n        // ActionBarDrawerToggleÂ± ties together the the proper interactions\r\n        // between the sliding drawer and the action bar app icon\r\n        mDrawerToggle = object : ActionBarDrawerToggle(\r\n            mActivity,\r\n            mDrawerLayout,\r\n            getMainActivity().getToolbar(),\r\n            string.navigation_drawer_open,\r\n            string.navigation_drawer_close) {\r\n            override fun onDrawerOpened(drawerView: View) {\r\n                super.onDrawerOpened(drawerView)\r\n                getMainActivity().invalidateOptionsMenu()\r\n            }\r\n\r\n        }\r\n\r\n//        if (isDoublePanelActive()) {\r\n//            mDrawerLayout!!.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_OPEN)\r\n//        }\r\n\r\n        // Styling options\r\n        //mDrawerLayout!!.setDrawerShadow(drawable.drawer_shadow, GravityCompat.START)\r\n        mDrawerLayout!!.addDrawerListener(mDrawerToggle as ActionBarDrawerToggle)\r\n        (mDrawerToggle as ActionBarDrawerToggle).isDrawerIndicatorEnabled = true\r\n\r\n    }\r\n\r\n\r\n    private fun refreshMenus(){\r\n        buildMainMenu()\r\n        Log.v(NAV_VIEW_FRAGMENT_TAG,\"Finished main menu initialization\")\r\n        mPresenter.getLabels()\r\n        Log.v(NAV_VIEW_FRAGMENT_TAG,\"Finished categories menu initialization\")\r\n\r\n    }\r\n\r\n\r\n    private fun buildMainMenu() {\r\n        drawer_view.drawer_item_settings.setOnClickListener{\r\n            mPresenter.onDrawerItemClicked(it.id)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    private fun getMainActivity(): MainActivity {\r\n        return (activity as MainActivity?)!!\r\n    }\r\n\r\n\r\n\r\n\r\n    private fun setListeners(){\r\n        editLabels.setOnClickListener{\r\n            mPresenter.onDrawerItemClicked(editLabels.id)\r\n        }\r\n        showAll.setOnClickListener{\r\n            mPresenter.onDrawerItemClicked(showAll.id)\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/main/drawer/AppNavigationDrawerFragment.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/main/drawer/NavDrawerFragment.kt	(date 1606162312277)
@@ -20,12 +20,12 @@
 import com.soufianekre.redpass.ui.base.BaseFragment
 import com.soufianekre.redpass.ui.labels.LabelsActivity
 import com.soufianekre.redpass.ui.main.MainActivity
-import com.soufianekre.redpass.ui.main.drawer.adapters.DrawerLabelsAdapter
 import com.soufianekre.redpass.ui.passwords.PasswordListFragment
-import kotlinx.android.synthetic.main.nav_drawer_fragment.view.*
+import com.soufianekre.redpass.ui.settings.SettingsActivity
+import kotlinx.android.synthetic.main.fragment_nav_drawer.view.*
 
 
-class AppNavigationDrawerFragment: BaseFragment(),DrawerMvp.View{
+class NavDrawerFragment: BaseFragment(),NavDrawerMvp.View{
 
 
     private val NAV_VIEW_FRAGMENT_TAG: String? = "nav_view_fragment"
@@ -40,24 +40,21 @@
     lateinit var editLabels : View
     @BindView(R.id.left_drawer)
     lateinit var leftDrawer:View
-
-
     @BindView(R.id.drawer_labels_list_view)
     lateinit var drawerLabelsListView : RecyclerView
 
-    lateinit var drawerLabelAdapter : DrawerLabelsAdapter
-
-
+    private lateinit var drawerLabelAdapter : NavDrawerLabelsAdapter
     var mDrawerToggle: ActionBarDrawerToggle? = null
     var mDrawerLayout: DrawerLayout? = null
     private var mActivity: MainActivity? = null
+
     private val alreadyInitialized: Boolean = false
 
-    lateinit var mPresenter: DrawerPresenter<DrawerMvp.View>
+    lateinit var mPresenter: NavDrawerPresenter<NavDrawerMvp.View>
 
     companion object{
-        fun newInstance(): AppNavigationDrawerFragment{
-            val fragment = AppNavigationDrawerFragment()
+        fun newInstance(): NavDrawerFragment{
+            val fragment = NavDrawerFragment()
             val bundle = Bundle()
             fragment.arguments = bundle
             return fragment
@@ -69,12 +66,27 @@
         container: ViewGroup?,
         savedInstanceState: Bundle?): View? {
 
-        drawer_view= inflater.inflate(R.layout.nav_drawer_fragment,container,false)
-        mPresenter = DrawerPresenter()
+        drawer_view= inflater.inflate(R.layout.fragment_nav_drawer,container,false)
+        mPresenter = NavDrawerPresenter()
         mPresenter.onAttach(this)
         ButterKnife.bind(this,drawer_view)
         return drawer_view
     }
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        drawerLabelAdapter =
+            NavDrawerLabelsAdapter(
+                requireActivity(),
+                ArrayList(),
+                this
+            )
+        drawerLabelsListView.setHasFixedSize(true)
+
+        drawerLabelsListView.layoutManager = LinearLayoutManager(requireActivity(),VERTICAL,false)
+        drawerLabelsListView.adapter = drawerLabelAdapter
+        setListeners()
+    }
 
 
     override fun onActivityCreated(savedInstanceState: Bundle?) {
@@ -93,37 +105,20 @@
         mPresenter.onDetach()
     }
 
-
-    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
-        super.onViewCreated(view, savedInstanceState)
-
-        drawerLabelAdapter =
-            DrawerLabelsAdapter(
-                requireActivity(),
-                ArrayList(),
-                mPresenter
-            )
-        drawerLabelsListView.setHasFixedSize(true)
-
-        drawerLabelsListView.layoutManager = LinearLayoutManager(requireActivity(),VERTICAL,false)
-        drawerLabelsListView.adapter = drawerLabelAdapter
-
+    override fun buildLabelsMenu(labelList : List<Label>) {
+        drawerLabelAdapter.addAll(labelList)
+        mDrawerToggle!!.syncState()
+    }
 
-        setListeners()
-    }
 
     override fun loadPasswordItemList(label: Label) {
         getMainActivity().loadFragment(PasswordListFragment.newInstance(label))
         getMainActivity().getDrawerLayout().closeDrawer(GravityCompat.START)
-
     }
 
-    override fun buildLabelsMenu(labelList : List<Label>) {
-        drawerLabelAdapter.addAll(labelList)
-        mDrawerToggle!!.syncState()
-    }
+
 
-    override fun openLabelsActivity(){
+    override fun showLabelsActivity(){
         val intent = Intent(requireContext(),LabelsActivity::class.java)
         startActivity(intent)
         getMainActivity().getDrawerLayout().closeDrawer(GravityCompat.START)
@@ -138,6 +133,18 @@
 
     }
 
+    override fun showSettings() {
+        val intent = Intent(activity,SettingsActivity::class.java)
+        startActivity(intent)
+    }
+
+    override fun onLabelClicked(label: Label) {
+        TODO("Not yet implemented")
+    }
+
+    override fun onLabelLongClicked(label: Label): Boolean {
+        TODO("Not yet implemented")
+    }
 
 
     private fun init(){
@@ -149,7 +156,7 @@
             10
         )
 
-        // ActionBarDrawerToggleÂ± ties together the the proper interactions
+        // ActionBarDrawerToggle ties together the the proper interactions
         // between the sliding drawer and the action bar app icon
         mDrawerToggle = object : ActionBarDrawerToggle(
             mActivity,
@@ -161,15 +168,8 @@
                 super.onDrawerOpened(drawerView)
                 getMainActivity().invalidateOptionsMenu()
             }
-
         }
 
-//        if (isDoublePanelActive()) {
-//            mDrawerLayout!!.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_OPEN)
-//        }
-
-        // Styling options
-        //mDrawerLayout!!.setDrawerShadow(drawable.drawer_shadow, GravityCompat.START)
         mDrawerLayout!!.addDrawerListener(mDrawerToggle as ActionBarDrawerToggle)
         (mDrawerToggle as ActionBarDrawerToggle).isDrawerIndicatorEnabled = true
 
@@ -184,29 +184,23 @@
 
     }
 
-
     private fun buildMainMenu() {
         drawer_view.drawer_item_settings.setOnClickListener{
-            mPresenter.onDrawerItemClicked(it.id)
+            showSettings()
         }
-
     }
-
-
 
     private fun getMainActivity(): MainActivity {
         return (activity as MainActivity?)!!
     }
 
-
-
-
     private fun setListeners(){
+
         editLabels.setOnClickListener{
-            mPresenter.onDrawerItemClicked(editLabels.id)
+            showLabelsActivity()
         }
         showAll.setOnClickListener{
-            mPresenter.onDrawerItemClicked(showAll.id)
+            showPasswordListFragment()
         }
     }
 
Index: app/src/main/java/com/soufianekre/redpass/ui/main/drawer/DrawerPresenter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.main.drawer\r\n\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.mvp.BasePresenter\r\n\r\nclass DrawerPresenter<V : DrawerMvp.View> : BasePresenter<V>() , DrawerMvp.Presenter<V>{\r\n\r\n\r\n    override fun getLabels() {\r\n        compositeDisposable.add(dataManager.getAppDatabase().labelDoa().getLabels()\r\n            .compose(schedulerProvider.ioToMainFlowableScheduler())\r\n            .subscribe {\r\n                getMvpView()?.buildLabelsMenu(it)\r\n            }\r\n\r\n        )\r\n    }\r\n    override fun onLabelClicked(label: Label) {\r\n        // load fragment\r\n        getMvpView()!!.loadPasswordItemList(label)\r\n    }\r\n\r\n    override fun onLabelLongClicked(label : Label): Boolean {\r\n        return false\r\n    }\r\n    override fun onDrawerItemClicked(item: Int) {\r\n        when(item){\r\n            R.id.drawer_item_settings -> return\r\n            R.id.drawer_item_edit_labels-> getMvpView()?.openLabelsActivity()\r\n            R.id.drawer_item_all -> getMvpView()?.showPasswordListFragment()\r\n        }\r\n    }\r\n\r\n}
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/main/drawer/DrawerPresenter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/main/drawer/NavDrawerPresenter.kt	(date 1606162312262)
@@ -1,10 +1,9 @@
 package com.soufianekre.redpass.ui.main.drawer
 
-import com.soufianekre.redpass.R
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.ui.base.mvp.BasePresenter
 
-class DrawerPresenter<V : DrawerMvp.View> : BasePresenter<V>() , DrawerMvp.Presenter<V>{
+class NavDrawerPresenter<V : NavDrawerMvp.View> : BasePresenter<V>() , NavDrawerMvp.Presenter<V>{
 
 
     override fun getLabels() {
@@ -13,23 +12,8 @@
             .subscribe {
                 getMvpView()?.buildLabelsMenu(it)
             }
-
         )
     }
-    override fun onLabelClicked(label: Label) {
-        // load fragment
-        getMvpView()!!.loadPasswordItemList(label)
-    }
 
-    override fun onLabelLongClicked(label : Label): Boolean {
-        return false
-    }
-    override fun onDrawerItemClicked(item: Int) {
-        when(item){
-            R.id.drawer_item_settings -> return
-            R.id.drawer_item_edit_labels-> getMvpView()?.openLabelsActivity()
-            R.id.drawer_item_all -> getMvpView()?.showPasswordListFragment()
-        }
-    }
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/fragment_password_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/password_list_recycler_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:visibility=\"gone\"/>\r\n    <include layout=\"@layout/empty_view_layout\"\r\n        android:id=\"@+id/passwords_empty_layout\"\r\n        android:visibility=\"visible\"/>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_password_list.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/fragment_password_list.xml	(date 1600800846486)
@@ -9,7 +9,7 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:visibility="gone"/>
-    <include layout="@layout/empty_view_layout"
+    <include layout="@layout/view_empty_layout"
         android:id="@+id/passwords_empty_layout"
         android:visibility="visible"/>
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/nav_drawer_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:pixlui=\"http://schemas.android.com/apk/com.neopixl.pixlui\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:background=\"@color/white\"\r\n    >\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/left_drawer\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <include layout=\"@layout/drawer_header\"/>\r\n\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"0.5dp\"\r\n            android:background=\"@color/divider\"/>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/drawer_item_all\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            style=\"@style/style_drawer_item_layout\">\r\n            <ImageView\r\n                android:id=\"@+id/drawer_all_icon\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:src=\"@drawable/ic_fire_dark\"\r\n                style=\"@style/style_drawer_img\"\r\n                />\r\n            <TextView\r\n                android:id=\"@+id/drawer_all_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_toEndOf=\"@id/drawer_all_icon\"\r\n                android:text=\"All\"\r\n                style=\"@style/style_drawer_text\"\r\n                />\r\n        </RelativeLayout>\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/drawer_labels_list_view\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"/>\r\n\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:background=\"@color/divider\"/>\r\n\r\n\r\n\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/drawer_item_edit_labels\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"60dp\"\r\n            style=\"@style/style_drawer_item_layout\">\r\n            <ImageView\r\n                android:id=\"@+id/drawer_edit_labels_icon\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:src=\"@drawable/ic_brush_black_24dp\"\r\n                style=\"@style/style_drawer_img\"\r\n                />\r\n            <TextView\r\n                android:id=\"@+id/drawer_edit_labels_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_toEndOf=\"@id/drawer_edit_labels_icon\"\r\n                android:text=\"Edit Labels\"\r\n                style=\"@style/style_drawer_text\"\r\n                />\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/drawer_item_settings\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"60dp\"\r\n            style=\"@style/style_drawer_item_layout\">\r\n            <ImageView\r\n                android:id=\"@+id/drawer_settings_icon\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:src=\"@drawable/ic_outline_settings_24\"\r\n                style=\"@style/style_drawer_img\"\r\n                />\r\n            <TextView\r\n                android:id=\"@+id/drawer_settings_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_toEndOf=\"@id/drawer_settings_icon\"\r\n                android:text=\"Settings\"\r\n                style=\"@style/style_drawer_text\"\r\n                />\r\n        </RelativeLayout>\r\n\r\n\r\n\r\n    </LinearLayout>\r\n</ScrollView>\r\n
===================================================================
--- app/src/main/res/layout/nav_drawer_fragment.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/fragment_nav_drawer.xml	(date 1606162829319)
@@ -1,10 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:pixlui="http://schemas.android.com/apk/com.neopixl.pixlui"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    xmlns:tools="http://schemas.android.com/tools"
     android:background="@color/white"
+    android:fitsSystemWindows="true"
     >
 
     <LinearLayout
@@ -19,93 +18,97 @@
             android:layout_width="match_parent"
             android:layout_height="0.5dp"
             android:background="@color/divider"/>
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="@dimen/spacing_small">
 
-        <RelativeLayout
-            android:id="@+id/drawer_item_all"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            style="@style/style_drawer_item_layout">
-            <ImageView
-                android:id="@+id/drawer_all_icon"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:src="@drawable/ic_fire_dark"
-                style="@style/style_drawer_img"
-                />
-            <TextView
-                android:id="@+id/drawer_all_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:layout_toEndOf="@id/drawer_all_icon"
-                android:text="All"
-                style="@style/style_drawer_text"
-                />
-        </RelativeLayout>
+            <RelativeLayout
+                android:id="@+id/drawer_item_all"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                style="@style/style_drawer_item_layout">
+                <ImageView
+                    android:id="@+id/drawer_all_icon"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_centerVertical="true"
+                    android:src="@drawable/ic_list_dark"
+                    style="@style/style_drawer_img"
+                    />
+                <TextView
+                    android:id="@+id/drawer_all_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_centerVertical="true"
+                    android:layout_toEndOf="@id/drawer_all_icon"
+                    android:text="All"
+                    android:textColor="@color/black"
+                    style="@style/style_drawer_text"
+                    />
+            </RelativeLayout>
 
-        <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/drawer_labels_list_view"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"/>
+            <androidx.recyclerview.widget.RecyclerView
+                android:id="@+id/drawer_labels_list_view"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"/>
 
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:background="@color/divider"/>
+            <View
+                android:layout_width="match_parent"
+                android:layout_height="1dp"
+                android:background="@color/divider"/>
 
 
-
-
-        <RelativeLayout
-            android:id="@+id/drawer_item_edit_labels"
-            android:layout_width="match_parent"
-            android:layout_height="60dp"
-            style="@style/style_drawer_item_layout">
-            <ImageView
-                android:id="@+id/drawer_edit_labels_icon"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:src="@drawable/ic_brush_black_24dp"
-                style="@style/style_drawer_img"
-                />
-            <TextView
-                android:id="@+id/drawer_edit_labels_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:layout_toEndOf="@id/drawer_edit_labels_icon"
-                android:text="Edit Labels"
-                style="@style/style_drawer_text"
-                />
-        </RelativeLayout>
+            <RelativeLayout
+                android:id="@+id/drawer_item_edit_labels"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                style="@style/style_drawer_item_layout">
+                <ImageView
+                    android:id="@+id/drawer_edit_labels_icon"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_centerVertical="true"
+                    android:src="@drawable/ic_brush_black_24dp"
+                    style="@style/style_drawer_img"
+                    />
+                <TextView
+                    android:id="@+id/drawer_edit_labels_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_centerVertical="true"
+                    android:layout_toEndOf="@id/drawer_edit_labels_icon"
+                    android:text="Edit Labels"
+                    style="@style/style_drawer_text"
+                    />
+            </RelativeLayout>
 
-        <RelativeLayout
-            android:id="@+id/drawer_item_settings"
-            android:layout_width="match_parent"
-            android:layout_height="60dp"
-            style="@style/style_drawer_item_layout">
-            <ImageView
-                android:id="@+id/drawer_settings_icon"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:src="@drawable/ic_outline_settings_24"
-                style="@style/style_drawer_img"
-                />
-            <TextView
-                android:id="@+id/drawer_settings_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:layout_toEndOf="@id/drawer_settings_icon"
-                android:text="Settings"
-                style="@style/style_drawer_text"
-                />
-        </RelativeLayout>
+            <RelativeLayout
+                android:id="@+id/drawer_item_settings"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                style="@style/style_drawer_item_layout">
+                <ImageView
+                    android:id="@+id/drawer_settings_icon"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_centerVertical="true"
+                    android:src="@drawable/ic_outline_settings_24"
+                    style="@style/style_drawer_img"
+                    />
+                <TextView
+                    android:id="@+id/drawer_settings_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_centerVertical="true"
+                    android:layout_toEndOf="@id/drawer_settings_icon"
+                    android:text="Settings"
+                    style="@style/style_drawer_text"
+                    />
+            </RelativeLayout>
 
-
+        </LinearLayout>
 
     </LinearLayout>
 </ScrollView>
Index: app/src/main/res/layout/card_password_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:padding=\"@dimen/spacing_small\"\r\n    android:layout_margin=\"@dimen/spacing_small\"\r\n    app:cardCornerRadius=\"@dimen/spacing_tiny\"\r\n\r\n    style=\"@style/style_password_item_layout\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"@dimen/spacing_small\">\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/password_icon_layout\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_centerVertical=\"true\">\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/icon_back\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:visibility=\"gone\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/selected_icon_bg_img\"\r\n                    android:layout_width=\"@dimen/bg_circle_size\"\r\n                    android:layout_height=\"@dimen/bg_circle_size\"\r\n                    android:src=\"@drawable/bg_circle\"\r\n                    android:layout_margin=\"@dimen/spacing_small\"/>\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/selected_icon_img\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    android:textColor=\"@android:color/white\"\r\n                    android:textSize=\"@dimen/font_large\"\r\n                    android:src=\"@drawable/ic_done_white\"/>\r\n            </RelativeLayout>\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/icon_front\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\">\r\n                <ImageView\r\n                    android:id=\"@+id/password_icon_img\"\r\n                    android:layout_width=\"@dimen/bg_circle_size\"\r\n                    android:layout_height=\"@dimen/bg_circle_size\"\r\n                    android:src=\"@drawable/bg_circle\"\r\n                    android:layout_margin=\"@dimen/spacing_small\"/>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/password_icon_text\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerInParent=\"true\"\r\n                    android:textColor=\"@android:color/white\"\r\n                    android:textSize=\"@dimen/font_large\"\r\n                    android:text=\"F\"/>\r\n\r\n            </RelativeLayout>\r\n\r\n        </RelativeLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_toEndOf=\"@id/password_icon_layout\"\r\n            android:orientation=\"vertical\"\r\n            android:padding=\"@dimen/spacing_small\"\r\n            android:layout_centerVertical=\"true\"\r\n            >\r\n            <TextView\r\n                android:id=\"@+id/password_title\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Bank\"/>\r\n            <TextView\r\n                android:id=\"@+id/password_account_use_title\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Credit Card\"\r\n                />\r\n\r\n        </LinearLayout>\r\n\r\n        <TextView\r\n            android:id=\"@+id/password_creation_date_text\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:padding=\"@dimen/spacing_tiny\"\r\n            android:text=\"Date\"/>\r\n\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>\r\n
===================================================================
--- app/src/main/res/layout/card_password_item.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/item_password_card.xml	(date 1606151238169)
@@ -6,7 +6,7 @@
     android:padding="@dimen/spacing_small"
     android:layout_margin="@dimen/spacing_small"
     app:cardCornerRadius="@dimen/spacing_tiny"
-
+    android:background="?selectableItemBackground"
     style="@style/style_password_item_layout">
 
     <RelativeLayout
@@ -82,7 +82,9 @@
                 android:id="@+id/password_title"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="Bank"/>
+                android:text="Bank"
+                android:textSize="@dimen/font_large"
+                android:textStyle="bold"/>
             <TextView
                 android:id="@+id/password_account_use_title"
                 android:layout_width="wrap_content"
@@ -98,7 +100,7 @@
             android:layout_height="wrap_content"
             android:layout_alignParentEnd="true"
             android:layout_centerVertical="true"
-            android:padding="@dimen/spacing_tiny"
+            android:padding="@dimen/spacing_small"
             android:text="Date"/>
 
 
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.drawerlayout.widget.DrawerLayout\r\n    android:id=\"@+id/main_drawer\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.main.MainActivity\"\r\n    tools:openDrawer=\"start\">\r\n\r\n    <androidx.coordinatorlayout.widget.CoordinatorLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        tools:context=\".ui.main.MainActivity\">\r\n\r\n        <com.google.android.material.appbar.AppBarLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n            <androidx.appcompat.widget.Toolbar\r\n                android:id=\"@+id/main_toolbar\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"?actionBarSize\"\r\n                app:titleTextColor=\"@color/white\"/>\r\n        </com.google.android.material.appbar.AppBarLayout>\r\n\r\n        <FrameLayout\r\n            app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\"\r\n            android:id=\"@+id/fragment_container\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n        </FrameLayout>\r\n\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/password_add_fab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_anchor=\"@id/fragment_container\"\r\n            app:layout_anchorGravity=\"bottom|end\"\r\n            android:src=\"@drawable/ic_add\"\r\n            android:layout_margin=\"@dimen/spacing_normal\"\r\n            />\r\n\r\n    </androidx.coordinatorlayout.widget.CoordinatorLayout>\r\n\r\n\r\n    <androidx.fragment.app.FragmentContainerView\r\n        android:id=\"@+id/main_nav_view\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"match_parent\"\r\n        android:fitsSystemWindows=\"true\"\r\n        tools:layout=\"@layout/nav_drawer_fragment\"\r\n        android:layout_gravity=\"start\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n</androidx.drawerlayout.widget.DrawerLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/activity_main.xml	(date 1606154315510)
@@ -6,7 +6,6 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".ui.main.MainActivity"
     tools:openDrawer="start">
 
     <androidx.coordinatorlayout.widget.CoordinatorLayout
@@ -14,15 +13,8 @@
         android:layout_height="match_parent"
         tools:context=".ui.main.MainActivity">
 
-        <com.google.android.material.appbar.AppBarLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-            <androidx.appcompat.widget.Toolbar
-                android:id="@+id/main_toolbar"
-                android:layout_width="match_parent"
-                android:layout_height="?actionBarSize"
-                app:titleTextColor="@color/white"/>
-        </com.google.android.material.appbar.AppBarLayout>
+        <include layout="@layout/view_toolbar_"/>
+
 
         <FrameLayout
             app:layout_behavior="com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior"
@@ -50,8 +42,9 @@
         android:layout_width="320dp"
         android:layout_height="match_parent"
         android:fitsSystemWindows="true"
-        tools:layout="@layout/nav_drawer_fragment"
-        android:layout_gravity="start" />
+        android:layout_gravity="start"
+        tools:layout="@layout/fragment_nav_drawer"
+/>
 
 
 
Index: app/src/main/res/layout/activity_labels.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <include layout=\"@layout/toolbar_\" />\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\"\r\n        android:padding=\"@dimen/spacing_small\">\r\n        <ImageView\r\n            android:id=\"@+id/add_label_img\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:src=\"@drawable/ic_add\"\r\n            android:layout_alignParentStart=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            style=\"@style/style_labels_img\"\r\n            />\r\n\r\n        <EditText\r\n            android:id=\"@+id/labels_add_label_field\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:inputType=\"textMultiLine\"\r\n            android:maxLines=\"1\"\r\n            android:minLines=\"1\"\r\n            android:maxLength=\"15\"\r\n            android:padding=\"@dimen/spacing_normal\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:layout_toEndOf=\"@id/add_label_img\"\r\n            android:layout_toStartOf=\"@id/labels_add_label_btn\"\r\n            style=\"@style/style_labels_field\"\r\n             />\r\n        <ImageView\r\n            android:id=\"@+id/labels_add_label_btn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:src=\"@drawable/ic_done\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            style=\"@style/style_labels_img\"/>\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/labels_recycler_view\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@id/labels_add_label_field\"\r\n            android:visibility=\"visible\"/>\r\n        <RelativeLayout\r\n            android:id=\"@+id/labels_empty_view\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@id/labels_add_label_btn\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:visibility=\"gone\">\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"@dimen/spacing_normal\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:text=\"No Labels Here\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"@dimen/font_larger\"\r\n                android:padding=\"@dimen/spacing_normal\"\r\n\r\n                />\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n\r\n\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_labels.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/activity_labels.xml	(date 1606154315446)
@@ -5,7 +5,7 @@
     android:layout_height="match_parent"
     xmlns:app="http://schemas.android.com/apk/res-auto">
 
-    <include layout="@layout/toolbar_" />
+    <include layout="@layout/view_toolbar_" />
 
     <RelativeLayout
         android:layout_width="match_parent"
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1606317342511)
+++ .idea/compiler.xml	(date 1606317342511)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/soufianekre/redpass/ui/views/DialogLabelAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.views\r\n\r\n\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.BaseAdapter\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.helpers.AppHelper\r\nimport kotlinx.android.synthetic.main.drawer_item_label.view.*\r\n\r\n\r\nclass DialogLabelAdapter(var mActivity: Activity, var labels: ArrayList<Label>,\r\n                         var navigationTmp: String? = null, var listener : DrawerLabelListener\r\n) :\r\n    BaseAdapter() {\r\n\r\n\r\n    private var holder : LabelBaseViewHolder? = null\r\n\r\n\r\n    override fun getView(position: Int, convertView: View?, parent: ViewGroup?): View {\r\n        val label :Label = labels[position]\r\n        var view : View? = convertView\r\n        if (view == null){\r\n            val inflater = mActivity.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater\r\n            view = inflater.inflate(com.soufianekre.redpass.R.layout.drawer_item_label,parent,false)\r\n            holder = LabelBaseViewHolder(view)\r\n\r\n\r\n        }else{\r\n            holder = convertView!!.tag as LabelBaseViewHolder\r\n        }\r\n        holder!!.drawerLabelText.text = label.name\r\n        holder!!.drawerLabelIcon.setColorFilter(AppHelper.getRandomMaterialColor(mActivity,400))\r\n\r\n        view!!.setOnClickListener{\r\n            listener.onItemClicked(label)\r\n        }\r\n\r\n        return view\r\n    }\r\n\r\n    override fun getItem(position: Int): Any {\r\n        return labels[position]\r\n    }\r\n\r\n    override fun getItemId(position: Int): Long {\r\n        return position.toLong()\r\n    }\r\n\r\n    override fun getCount(): Int {\r\n        return labels.size\r\n    }\r\n\r\n    fun addAll(labelList:List<Label>){\r\n        labels.clear()\r\n        labels.addAll(labelList)\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n\r\n    inner class LabelBaseViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView){\r\n        var drawerLabelText :TextView = itemView.drawer_item_label_text\r\n        var drawerLabelIcon :ImageView = itemView.drawer_item_label_icon\r\n\r\n    }\r\n\r\n    interface DrawerLabelListener{\r\n        fun onItemClicked(label:Label)\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/views/DialogLabelAdapter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/views/DialogLabelAdapter.kt	(date 1606163139462)
@@ -12,7 +12,7 @@
 import androidx.recyclerview.widget.RecyclerView
 import com.soufianekre.redpass.data.db.models.Label
 import com.soufianekre.redpass.helpers.AppHelper
-import kotlinx.android.synthetic.main.drawer_item_label.view.*
+import kotlinx.android.synthetic.main.item_drawer_label.view.*
 
 
 class DialogLabelAdapter(var mActivity: Activity, var labels: ArrayList<Label>,
@@ -29,7 +29,7 @@
         var view : View? = convertView
         if (view == null){
             val inflater = mActivity.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater
-            view = inflater.inflate(com.soufianekre.redpass.R.layout.drawer_item_label,parent,false)
+            view = inflater.inflate(com.soufianekre.redpass.R.layout.item_drawer_label,parent,false)
             holder = LabelBaseViewHolder(view)
 
 
Index: app/src/main/java/com/soufianekre/redpass/ui/labels/LabelsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.labels\r\n\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.EditText\r\nimport android.widget.ImageView\r\nimport android.widget.RelativeLayout\r\nimport androidx.appcompat.widget.Toolbar\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.LinearLayoutManager.VERTICAL\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport butterknife.BindView\r\nimport butterknife.ButterKnife\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.ui.base.BaseActivity\r\nimport com.soufianekre.redpass.ui.views.CustomDividerItemDecoration\r\n\r\nclass LabelsActivity :BaseActivity(),LabelsMvp.View{\r\n\r\n\r\n    //views\r\n    @BindView(R.id.app_toolbar)\r\n    lateinit var appToolbar:Toolbar\r\n\r\n    @BindView(R.id.labels_add_label_field)\r\n    lateinit var addLabelField: EditText\r\n\r\n    @BindView(R.id.labels_add_label_btn)\r\n    lateinit var addLabelImgBtn : ImageView\r\n\r\n\r\n    @BindView(R.id.labels_recycler_view)\r\n    lateinit var labelsRecyclerView: RecyclerView\r\n\r\n    @BindView(R.id.labels_empty_view)\r\n    lateinit var labelEmptyView :RelativeLayout\r\n\r\n\r\n\r\n    private  var labelAdapter: LabelsAdapter? = null\r\n\r\n    private lateinit var mPresenter : LabelsPresenter<LabelsMvp.View>\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_labels)\r\n        mPresenter = LabelsPresenter()\r\n        ButterKnife.bind(this)\r\n        mPresenter.onAttach(this)\r\n        setupUi()\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        mPresenter.onDetach()\r\n    }\r\n\r\n    private fun setupUi(){\r\n        //toolbar\r\n        appToolbar.title = \"Edit Label\"\r\n        appToolbar.setOnClickListener{\r\n            onBackPressed()\r\n        }\r\n        setSupportActionBar(appToolbar)\r\n        supportActionBar!!.setDisplayHomeAsUpEnabled(true)\r\n\r\n\r\n        addLabelImgBtn.setOnClickListener{\r\n            mPresenter.addLabel(addLabelField.text.toString())\r\n            addLabelField.text.clear()\r\n\r\n        }\r\n\r\n        //recyclerView\r\n        labelAdapter = LabelsAdapter(this,ArrayList(),mPresenter)\r\n        labelsRecyclerView.itemAnimator = DefaultItemAnimator()\r\n        labelsRecyclerView.layoutManager = LinearLayoutManager(this,VERTICAL,false)\r\n        labelsRecyclerView.addItemDecoration(CustomDividerItemDecoration(this, VERTICAL))\r\n\r\n        labelsRecyclerView.adapter = labelAdapter\r\n\r\n        mPresenter.getLabels()\r\n\r\n\r\n\r\n    }\r\n\r\n    override fun updateAdapter(labels :List<Label>) {\r\n        labelAdapter!!.addAll(labels)\r\n        checkEmptyView()\r\n    }\r\n\r\n    private fun checkEmptyView(){\r\n        showMessage(\"\"+labelAdapter!!.itemCount)\r\n        if(labelAdapter!!.itemCount>0){\r\n            labelsRecyclerView.visibility = View.VISIBLE\r\n            labelEmptyView.visibility = View.GONE\r\n\r\n        }else{\r\n            labelsRecyclerView.visibility = View.GONE\r\n            labelEmptyView.visibility = View.VISIBLE\r\n        }\r\n    }\r\n\r\n    override fun onItemInserted(label : Label) {\r\n        labelAdapter!!.add(label)\r\n        checkEmptyView()\r\n\r\n    }\r\n\r\n    override fun onItemDeleted(label :Label) {\r\n        labelAdapter!!.remove(label)\r\n        checkEmptyView()\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/labels/LabelsActivity.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/labels/LabelsActivity.kt	(date 1606162425919)
@@ -30,15 +30,12 @@
     @BindView(R.id.labels_add_label_btn)
     lateinit var addLabelImgBtn : ImageView
 
-
     @BindView(R.id.labels_recycler_view)
     lateinit var labelsRecyclerView: RecyclerView
 
     @BindView(R.id.labels_empty_view)
     lateinit var labelEmptyView :RelativeLayout
 
-
-
     private  var labelAdapter: LabelsAdapter? = null
 
     private lateinit var mPresenter : LabelsPresenter<LabelsMvp.View>
@@ -59,31 +56,30 @@
 
     private fun setupUi(){
         //toolbar
-        appToolbar.title = "Edit Label"
+        appToolbar.title = getString(R.string.edit_label)
         appToolbar.setOnClickListener{
             onBackPressed()
         }
         setSupportActionBar(appToolbar)
         supportActionBar!!.setDisplayHomeAsUpEnabled(true)
 
-
-        addLabelImgBtn.setOnClickListener{
-            mPresenter.addLabel(addLabelField.text.toString())
-            addLabelField.text.clear()
-
-        }
-
         //recyclerView
         labelAdapter = LabelsAdapter(this,ArrayList(),mPresenter)
         labelsRecyclerView.itemAnimator = DefaultItemAnimator()
         labelsRecyclerView.layoutManager = LinearLayoutManager(this,VERTICAL,false)
         labelsRecyclerView.addItemDecoration(CustomDividerItemDecoration(this, VERTICAL))
-
         labelsRecyclerView.adapter = labelAdapter
-
         mPresenter.getLabels()
 
 
+        addLabelImgBtn.setOnClickListener{
+            val newLabelName = addLabelField.text.trim().toString()
+            if (newLabelName.isNotEmpty() && !labelAdapter!!.isLabelExisted(newLabelName))
+                mPresenter.addLabel(newLabelName)
+            addLabelField.text.clear()
+
+        }
+
 
     }
 
@@ -93,7 +89,7 @@
     }
 
     private fun checkEmptyView(){
-        showMessage(""+labelAdapter!!.itemCount)
+        showMessage("${labelAdapter!!.itemCount}")
         if(labelAdapter!!.itemCount>0){
             labelsRecyclerView.visibility = View.VISIBLE
             labelEmptyView.visibility = View.GONE
Index: app/src/main/res/layout/activity_finger_print.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_finger_print.xml	(date 1606152378106)
+++ app/src/main/res/layout/activity_finger_print.xml	(date 1606152378106)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_first_launch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n\r\n    <include layout=\"@layout/toolbar_\"/>\r\n\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/user_password_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"@dimen/spacing_normal\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/user_password_description\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:text=\"Set A Password For The App :\"\r\n            android:textSize=\"@dimen/font_large\"\r\n            android:padding=\"@dimen/spacing_normal\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:clickable=\"false\"\r\n            android:textAlignment=\"center\"/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/user_password_field_layout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_below=\"@id/user_password_description\"\r\n            >\r\n\r\n\r\n\r\n            <ImageView\r\n                android:id=\"@+id/app_password_show_hide_img\"\r\n                style=\"@style/style_intro_img\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:src=\"@drawable/ic_show_24dp\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                android:hint=\"Password\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/app_password_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textPassword\"\r\n                    style=\"@style/style_intro_field\"/>\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n        </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/user_password_field_layout\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:orientation=\"vertical\">\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                android:hint=\"Confirm Password\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/app_confirm_password_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textPassword\"\r\n                    style=\"@style/style_intro_field\"/>\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n\r\n            <Button\r\n                android:id=\"@+id/user_password_submit_btn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"ENTER\"\r\n                android:layout_gravity=\"center\"/>\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_first_launch.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/activity_first_launch.xml	(date 1606154315484)
@@ -6,7 +6,7 @@
     android:layout_height="match_parent">
 
 
-    <include layout="@layout/toolbar_"/>
+    <include layout="@layout/view_toolbar_"/>
 
 
     <RelativeLayout
Index: app/src/main/java/com/soufianekre/redpass/ui/labels/LabelsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.soufianekre.redpass.ui.labels\r\n\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.soufianekre.redpass.R\r\nimport com.soufianekre.redpass.data.db.models.Label\r\nimport com.soufianekre.redpass.helpers.AppHelper\r\nimport kotlinx.android.synthetic.main.item_label.view.*\r\n\r\nclass LabelsAdapter(private var mContext : Context, private var labels : ArrayList<Label>,var listener: LabelsAdapterListener?) : RecyclerView.Adapter<LabelsAdapter.LabelViewHolder>(){\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): LabelViewHolder {\r\n        val view = LayoutInflater.from(mContext).inflate(R.layout.item_label,parent,false)\r\n        return LabelViewHolder(view)\r\n    }\r\n\r\n    override fun getItemCount(): Int {\r\n        return labels.size\r\n    }\r\n\r\n    override fun onBindViewHolder(holder: LabelViewHolder, position: Int) {\r\n        val label = labels[position]\r\n        holder.labelText.text = label.name\r\n        holder.labelIcon.setColorFilter(AppHelper.getRandomMaterialColor(mContext,400))\r\n\r\n        setListeners(holder,position)\r\n    }\r\n\r\n    private fun setListeners(holder: LabelViewHolder, position: Int){\r\n        holder.itemView.setOnClickListener{\r\n            listener?.onLabelClicked(labels[position])\r\n        }\r\n        holder.itemView.setOnLongClickListener{\r\n            if (listener == null)\r\n                return@setOnLongClickListener false\r\n            else\r\n                listener!!.onLabelLongClicked(labels[position])\r\n\r\n        }\r\n        holder.deleteLabelBtn.setOnClickListener{\r\n            listener?.onLabelDeleted(labels[position])\r\n        }\r\n\r\n    }\r\n\r\n    fun addAll(labelList: List<Label>){\r\n        labels.clear()\r\n        labels.addAll(labelList)\r\n        notifyDataSetChanged()\r\n    }\r\n    fun remove(label :Label){\r\n        for ( i in 0 until labels.size){\r\n            if (labels[i] == label)\r\n                labels.remove(label)\r\n                notifyItemRemoved(i)\r\n        }\r\n\r\n    }\r\n    fun add(label :Label){\r\n        labels.add(label)\r\n        notifyItemInserted(labels.size- 1)\r\n    }\r\n\r\n\r\n\r\n    inner class LabelViewHolder(itemView: View) :RecyclerView.ViewHolder(itemView){\r\n        var labelText: TextView = itemView.label_text\r\n        var labelIcon: ImageView = itemView.label_icon\r\n        var deleteLabelBtn:ImageView = itemView.label_delete_img\r\n    }\r\n\r\n    interface LabelsAdapterListener{\r\n        fun onLabelClicked(label :Label)\r\n        fun onLabelLongClicked(label:Label) : Boolean\r\n        fun onLabelDeleted(label :Label)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/soufianekre/redpass/ui/labels/LabelsAdapter.kt	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/java/com/soufianekre/redpass/ui/labels/LabelsAdapter.kt	(date 1605282389024)
@@ -59,13 +59,20 @@
                 labels.remove(label)
                 notifyItemRemoved(i)
         }
-
     }
+
     fun add(label :Label){
         labels.add(label)
         notifyItemInserted(labels.size- 1)
     }
 
+    fun isLabelExisted(title : String) : Boolean{
+        labels.forEach {
+            if (title == it.name) return true
+        }
+        return false
+    }
+
 
 
     inner class LabelViewHolder(itemView: View) :RecyclerView.ViewHolder(itemView){
Index: app/src/main/res/layout/activity_password_editor.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    >\r\n    <include layout=\"@layout/toolbar_\"/>\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\">\r\n        <RelativeLayout\r\n            android:id=\"@+id/pass_layout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"@dimen/spacing_large\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/pass_chosen_category\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:drawableStart=\"@drawable/ic_label_outline_24dp\"\r\n                android:text=\" No Label\"\r\n                android:padding=\"@dimen/spacing_small\"\r\n                android:drawablePadding=\"@dimen/spacing_small\"/>\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/pass_title_field_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/pass_chosen_category\"\r\n                android:hint=\"Title\"\r\n                app:hintAnimationEnabled=\"true\"\r\n                android:autofillHints=\"Title\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/pass_title_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"text\"\r\n                    android:lines=\"1\"\r\n\r\n                    style=\"@style/style_password_editor_field\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/pass_username_field_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/pass_title_field_layout\"\r\n                android:hint=\"Username\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/pass_username_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textWebEmailAddress\"\r\n                    android:lines=\"1\"\r\n                    style=\"@style/style_password_editor_field\"\r\n                    />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/pass_password_field_layout\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/pass_username_field_layout\"\r\n                android:layout_toStartOf=\"@id/password_show_hide_img\"\r\n                android:layout_alignParentStart=\"true\"\r\n                android:hint=\"Password\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n\r\n                    android:id=\"@+id/pass_password_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:lines=\"1\"\r\n                    style=\"@style/style_password_editor_field\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/password_show_hide_img\"\r\n\r\n                style=\"@style/style_password_editor_img_btn\"\r\n                android:layout_width=\"@dimen/img_btn_size\"\r\n                android:layout_height=\"@dimen/img_btn_size\"\r\n                android:layout_below=\"@id/pass_username_field_layout\"\r\n                android:layout_toStartOf=\"@id/password_generate_img\"\r\n                android:src=\"@drawable/ic_show_24dp\" />\r\n            <ImageView\r\n                android:id=\"@+id/password_generate_img\"\r\n                android:layout_width=\"@dimen/img_btn_size\"\r\n                android:layout_height=\"@dimen/img_btn_size\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:layout_below=\"@id/pass_username_field_layout\"\r\n                android:src=\"@drawable/ic_generate_24dp\"\r\n                android:contentDescription=\"Generate Random Password\"\r\n                style=\"@style/style_password_editor_img_btn\"\r\n                />\r\n\r\n\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/pass_account_use_field_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/pass_password_field_layout\"\r\n                android:layout_alignParentStart=\"true\"\r\n                android:layout_toStartOf=\"@id/password_search_google_img\"\r\n                android:inputType=\"text\"\r\n                android:hint=\"Account use\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/pass_account_use_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"text\"\r\n                    android:lines=\"1\"\r\n                    style=\"@style/style_password_editor_field\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/password_search_google_img\"\r\n                style=\"@style/style_password_editor_img_btn\"\r\n                android:layout_width=\"@dimen/img_btn_size\"\r\n                android:layout_height=\"@dimen/img_btn_size\"\r\n                android:layout_below=\"@id/pass_password_field_layout\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:src=\"@drawable/ic_search_black\"\r\n                android:contentDescription=\"Search In Google\"/>\r\n\r\n\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/pass_notes_field_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/pass_account_use_field_layout\"\r\n                android:layout_alignParentStart=\"true\"\r\n\r\n                android:hint=\"Notes\"\r\n                style=\"@style/style_password_editor_text_input\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/pass_notes_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textMultiLine\"\r\n\r\n\r\n                    style=\"@style/style_password_editor_field\"\r\n                    />\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <Button\r\n                android:id=\"@+id/pass_label_btn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_below=\"@id/pass_notes_field_layout\"\r\n                android:text=\"Label\"/>\r\n\r\n\r\n\r\n        </RelativeLayout>\r\n    </ScrollView>\r\n\r\n\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_password_editor.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/activity_password_editor.xml	(date 1606154315424)
@@ -5,7 +5,7 @@
     android:layout_height="match_parent"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     >
-    <include layout="@layout/toolbar_"/>
+    <include layout="@layout/view_toolbar_"/>
 
     <ScrollView
         android:layout_width="match_parent"
@@ -16,21 +16,26 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:padding="@dimen/spacing_large">
+            <com.google.android.material.chip.ChipGroup
+                android:id="@+id/editor_chip_group"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:padding="@dimen/spacing_small">
 
-            <TextView
-                android:id="@+id/pass_chosen_category"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:drawableStart="@drawable/ic_label_outline_24dp"
-                android:text=" No Label"
-                android:padding="@dimen/spacing_small"
-                android:drawablePadding="@dimen/spacing_small"/>
+                <com.google.android.material.chip.Chip
+                    android:id="@+id/chip_password_label"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="No Label"
+                    style="@style/Widget.LabelChip"
+                    app:chipIcon="@drawable/chip_dot"/>
+            </com.google.android.material.chip.ChipGroup>
 
             <com.google.android.material.textfield.TextInputLayout
                 android:id="@+id/pass_title_field_layout"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:layout_below="@+id/pass_chosen_category"
+                android:layout_below="@+id/editor_chip_group"
                 android:hint="Title"
                 app:hintAnimationEnabled="true"
                 android:autofillHints="Title"
Index: app/src/main/res/layout/drawer_header.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<merge>\r\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"@dimen/spacing_normal\"\r\n        android:orientation=\"horizontal\"\r\n        >\r\n\r\n    <ImageView\r\n        android:id=\"@+id/drawer_header_img\"\r\n        android:layout_width=\"64dp\"\r\n        android:layout_height=\"64dp\"\r\n        android:src=\"@mipmap/ic_launcher_round\"\r\n        android:padding=\"@dimen/spacing_normal\"\r\n        />\r\n    <TextView\r\n        android:id=\"@+id/drawer_header_text\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n\r\n        android:text=\"@string/app_name\"\r\n        android:textSize=\"@dimen/font_normal\"\r\n        android:padding=\"@dimen/spacing_normal\"\r\n        android:textStyle=\"bold\"/>\r\n\r\n\r\n\r\n\r\n\r\n</LinearLayout>\r\n</merge>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/drawer_header.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/drawer_header.xml	(date 1606151323269)
@@ -3,9 +3,11 @@
 <merge>
     <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="@dimen/spacing_normal"
+        android:layout_height="120dp"
+        android:padding="@dimen/spacing_small"
         android:orientation="horizontal"
+        android:layout_centerVertical="true"
+        android:background="@color/colorPrimaryDark"
         >
 
     <ImageView
@@ -13,17 +15,23 @@
         android:layout_width="64dp"
         android:layout_height="64dp"
         android:src="@mipmap/ic_launcher_round"
-        android:padding="@dimen/spacing_normal"
+        android:padding="@dimen/spacing_small"
+        android:layout_margin="@dimen/spacing_small"
+        android:layout_gravity="center"
         />
     <TextView
         android:id="@+id/drawer_header_text"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-
-        android:text="@string/app_name"
-        android:textSize="@dimen/font_normal"
-        android:padding="@dimen/spacing_normal"
-        android:textStyle="bold"/>
+        android:gravity="center"
+        android:layout_gravity="center"
+        android:padding="@dimen/spacing_small"
+        android:fontFamily="sans-serif"
+        android:text="RED PASS"
+        android:textSize="@dimen/font_larger"
+        android:textStyle="bold|italic"
+        android:textColor="@color/white"
+        />
 
 
 
Index: app/src/main/res/layout/activity_intro.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:orientation=\"vertical\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n\r\n\r\n    <include layout=\"@layout/toolbar_\"/>\r\n    <RelativeLayout\r\n        android:id=\"@+id/user_password_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"@dimen/spacing_normal\"\r\n        app:layout_behavior=\"com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/user_password_description\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:hint=\"Welcome \"\r\n            android:textSize=\"@dimen/font_large\"\r\n            android:padding=\"@dimen/spacing_normal\"\r\n            android:textAlignment=\"center\"\r\n            android:clickable=\"false\"/>\r\n\r\n\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/user_password_field_layout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:layout_below=\"@id/user_password_description\"\r\n            >\r\n\r\n\r\n\r\n            <ImageView\r\n                android:id=\"@+id/user_password_show_hide_img\"\r\n                style=\"@style/style_intro_img\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:src=\"@drawable/ic_show_24dp\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:hint=\"Password\"\r\n                app:boxBackgroundColor=\"?android:windowBackground\"\r\n                >\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/user_password_field\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:inputType=\"textPassword\"\r\n                    style=\"@style/style_intro_field\"/>\r\n\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n        </LinearLayout>\r\n\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/user_password_field_layout\"\r\n            android:layout_centerHorizontal=\"true\">\r\n\r\n            <Button\r\n                android:id=\"@+id/user_password_faq_btn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"FAQ\"\r\n                android:layout_margin=\"@dimen/spacing_small\"/>\r\n\r\n            <Button\r\n                android:id=\"@+id/user_password_submit_btn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"ENTER\"\r\n                android:layout_margin=\"@dimen/spacing_small\"/>\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_intro.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/activity_intro.xml	(date 1606154315532)
@@ -7,7 +7,7 @@
 
 
 
-    <include layout="@layout/toolbar_"/>
+    <include layout="@layout/view_toolbar_"/>
     <RelativeLayout
         android:id="@+id/user_password_layout"
         android:layout_width="match_parent"
Index: app/src/main/res/layout/toolbar_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<merge>\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/app_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"?actionBarSize\"\r\n            app:title=\"@string/app_name\"\r\n            app:titleTextColor=\"@color/white\"\r\n            />\r\n\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n\r\n</merge>\r\n
===================================================================
--- app/src/main/res/layout/toolbar_.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/layout/view_toolbar_.xml	(date 1606152546005)
@@ -3,15 +3,17 @@
 <merge>
     <com.google.android.material.appbar.AppBarLayout
         xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        xmlns:app="http://schemas.android.com/apk/res-auto">
+        android:theme="@style/AppTheme.ThemeOverLay"
+        >
         <androidx.appcompat.widget.Toolbar
             android:id="@+id/app_toolbar"
             android:layout_width="match_parent"
             android:layout_height="?actionBarSize"
             app:title="@string/app_name"
-            app:titleTextColor="@color/white"
+            app:popupTheme="@style/AppTheme.PopUpOverLay"
             />
 
     </com.google.android.material.appbar.AppBarLayout>
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#F44336</color>\r\n    <color name=\"colorPrimaryDark\">#F44336</color>\r\n    <color name=\"colorAccent\">#FFC107</color>\r\n    <color name=\"safr\">#5f777777</color>\r\n    <color name=\"holo_dark_background\">#303030</color>\r\n    <color name=\"holo_dark_action_mode\">#212121</color>\r\n    <color name=\"divider\">#e0e0e0</color>\r\n    <color name=\"divider_dark_card\">#575757</color>\r\n    <color name=\"divider_dark\">#484848</color>\r\n    <color name=\"search_text_highlight\">#FF9632</color>\r\n\r\n\r\n    <!--GRAY 700 used for icons instead of black-->\r\n    <color name=\"item_light_theme\">#FF616161</color>\r\n\r\n    <color name=\"roundedimagepaint\">#BAB399</color>\r\n\r\n    <!--Colors for preference dialog pie chart-->\r\n    <color name=\"piechart_red\">#FFEF5350</color>\r\n    <color name=\"piechart_green\">#FF4CAF50</color>\r\n    <color name=\"piechart_blue\">#FF2196F3</color>\r\n\r\n    <!-- primary color palatte -->\r\n    <color name=\"primary_red\">#F44336</color>\r\n    <color name=\"primary_pink\">#e91e63</color>\r\n    <color name=\"primary_purple\">#9c27b0</color>\r\n    <color name=\"primary_deep_purple\">#673ab7</color>\r\n    <color name=\"primary_indigo\">#3f51b5</color>\r\n    <color name=\"primary_blue\">#2196F3</color>\r\n    <color name=\"primary_light_blue\">#03A9F4</color>\r\n    <color name=\"primary_cyan\">#00BCD4</color>\r\n    <color name=\"primary_teal\">#009688</color>\r\n    <color name=\"primary_green\">#4CAF50</color>\r\n    <color name=\"primary_light_green\">#8bc34a</color>\r\n    <color name=\"primary_amber\">#FFC107</color>\r\n    <color name=\"primary_orange\">#FF9800</color>\r\n    <color name=\"primary_deep_orange\">#FF5722</color>\r\n    <color name=\"primary_brown\">#795548</color>\r\n    <color name=\"primary_grey_900\">#000000</color>\r\n    <color name=\"primary_blue_grey\">#607d8b</color>\r\n    <color name=\"primary_teal_900\">#004d40</color>\r\n\r\n    <!-- accent color palatte -->\r\n    <color name=\"accent_red\">#F44336</color>\r\n    <color name=\"accent_pink\">#e91e63</color>\r\n    <color name=\"accent_purple\">#9c27b0</color>\r\n    <color name=\"accent_deep_purple\">#673ab7</color>\r\n    <color name=\"accent_indigo\">#3f51b5</color>\r\n    <color name=\"accent_blue\">#2196F3</color>\r\n    <color name=\"accent_light_blue\">#03A9F4</color>\r\n    <color name=\"accent_cyan\">#00BCD4</color>\r\n    <color name=\"accent_teal\">#009688</color>\r\n    <color name=\"accent_green\">#4CAF50</color>\r\n    <color name=\"accent_light_green\">#8bc34a</color>\r\n    <color name=\"accent_amber\">#FFC107</color>\r\n    <color name=\"accent_orange\">#FF9800</color>\r\n    <color name=\"accent_deep_orange\">#FF5722</color>\r\n    <color name=\"accent_brown\">#795548</color>\r\n    <color name=\"accent_black\">#212121</color>\r\n    <color name=\"accent_blue_grey\">#607d8b</color>\r\n    <color name=\"accent_super_su\">#004d40</color>\r\n\r\n    <!-- colors used for files items -->\r\n    <color name=\"goback_item\">#757575</color>\r\n    <color name=\"video_item\">#f06292</color>\r\n    <color name=\"audio_item\">#9575cd</color>\r\n    <color name=\"pdf_item\">#da4336</color>\r\n    <color name=\"code_item\">#00bfa5</color>\r\n    <color name=\"text_item\">#e06055</color>\r\n    <color name=\"archive_item\">#f9a825</color>\r\n    <color name=\"apk_item\">#a4c439</color>\r\n    <color name=\"generic_item\">#9e9e9e</color>\r\n\r\n    <color name=\"grey\">#ff666666</color>\r\n\r\n    <color name=\"appsadapter_background\">#5f33b5e5</color>\r\n\r\n    <color name=\"text_disabled\">#f6f6f6</color>\r\n\r\n    <color name=\"item_background\">#9f757575</color>\r\n    <color name=\"icon_background_dark\">#303030</color>\r\n\r\n    <color name=\"text_light\">#8A000000</color>\r\n    <color name=\"text_dark\">#B3ffffff</color>\r\n\r\n    <!-- indicator -->\r\n\r\n    <!-- cardview foreground and background -->\r\n    <color name=\"cardView_foreground\">#202020</color>\r\n    <color name=\"cardView_background\">#363F45</color>\r\n\r\n    <color name=\"white_translucent\">#80ffffff</color>\r\n\r\n    <color name=\"disabled_button\">#BDBDBD</color>\r\n\r\n    <!--Used for white vectors -->\r\n    <color name=\"vectors_white\">#FFFFFFFF</color>\r\n\r\n    <!-- Warning error for InputTextLayout -->\r\n    <color name=\"warningColor\">#ffe082</color>\r\n    <!-- Error error for InputTextLayout -->\r\n    <color name=\"error_color_material\">#F4511E</color>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <color name=\"bg_circle_default\">@color/colorPrimary</color>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision b7c037888780f43179910a93ab48743249539cbd)
+++ app/src/main/res/values/colors.xml	(date 1606161514468)
@@ -18,7 +18,7 @@
     <color name="roundedimagepaint">#BAB399</color>
 
     <!--Colors for preference dialog pie chart-->
-    <color name="piechart_red">#FFEF5350</color>
+    <color name="drawer_selection_color">#C4EF5350</color>
     <color name="piechart_green">#FF4CAF50</color>
     <color name="piechart_blue">#FF2196F3</color>
 
@@ -61,6 +61,7 @@
     <color name="accent_black">#212121</color>
     <color name="accent_blue_grey">#607d8b</color>
     <color name="accent_super_su">#004d40</color>
+    <color name="black">#000000</color>
 
     <!-- colors used for files items -->
     <color name="goback_item">#757575</color>
@@ -82,8 +83,8 @@
     <color name="item_background">#9f757575</color>
     <color name="icon_background_dark">#303030</color>
 
-    <color name="text_light">#8A000000</color>
-    <color name="text_dark">#B3ffffff</color>
+    <color name="text_light_mode">#8A000000</color>
+    <color name="text_dark_mode">#B3ffffff</color>
 
     <!-- indicator -->
 
@@ -103,12 +104,5 @@
     <!-- Error error for InputTextLayout -->
     <color name="error_color_material">#F4511E</color>
 
-
-
-
-
-
-
-
     <color name="bg_circle_default">@color/colorPrimary</color>
 </resources>
diff --git app/src/main/res/xml/settings_storage_layout.xml app/src/main/res/xml/settings_database_layout.xml
rename from app/src/main/res/xml/settings_storage_layout.xml
rename to app/src/main/res/xml/settings_database_layout.xml
diff --git app/src/main/res/layout/empty_view_layout.xml app/src/main/res/layout/view_empty_layout.xml
rename from app/src/main/res/layout/empty_view_layout.xml
rename to app/src/main/res/layout/view_empty_layout.xml
